<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='tweets_wmost_important_word' inline='true' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tweets_wmost_important_word' name='textscan.1fgaec50kblvxt13vnvyp07823aj'>
            <connection class='textscan' directory='C:/Users/Adrian D02/Desktop/COMP4448/assignment_2/tweet_analysis/data' filename='tweets_wmost_important_word.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1fgaec50kblvxt13vnvyp07823aj' name='tweets_wmost_important_word.csv' table='[tweets_wmost_important_word#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_HK' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='handle' ordinal='1' />
            <column datatype='string' name='text' ordinal='2' />
            <column datatype='boolean' name='is_retweet' ordinal='3' />
            <column datatype='string' name='original_author' ordinal='4' />
            <column datatype='datetime' name='time' ordinal='5' />
            <column datatype='string' name='in_reply_to_screen_name' ordinal='6' />
            <column datatype='real' name='in_reply_to_status_id' ordinal='7' />
            <column datatype='real' name='in_reply_to_user_id' ordinal='8' />
            <column datatype='boolean' name='is_quote_status' ordinal='9' />
            <column datatype='string' name='lang' ordinal='10' />
            <column datatype='integer' name='retweet_count' ordinal='11' />
            <column datatype='integer' name='favorite_count' ordinal='12' />
            <column datatype='real' name='longitude' ordinal='13' />
            <column datatype='real' name='latitude' ordinal='14' />
            <column datatype='string' name='place_id' ordinal='15' />
            <column datatype='string' name='place_full_name' ordinal='16' />
            <column datatype='string' name='place_name' ordinal='17' />
            <column datatype='string' name='place_type' ordinal='18' />
            <column datatype='string' name='place_country_code' ordinal='19' />
            <column datatype='string' name='place_country' ordinal='20' />
            <column datatype='string' name='place_contained_within' ordinal='21' />
            <column datatype='string' name='place_attributes' ordinal='22' />
            <column datatype='string' name='place_bounding_box' ordinal='23' />
            <column datatype='string' name='source_url' ordinal='24' />
            <column datatype='boolean' name='truncated' ordinal='25' />
            <column datatype='string' name='entities' ordinal='26' />
            <column datatype='string' name='extended_entities' ordinal='27' />
            <column datatype='string' name='most_important_word' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1fgaec50kblvxt13vnvyp07823aj' name='tweets_wmost_important_word.csv' table='[tweets_wmost_important_word#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_HK' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='handle' ordinal='1' />
            <column datatype='string' name='text' ordinal='2' />
            <column datatype='boolean' name='is_retweet' ordinal='3' />
            <column datatype='string' name='original_author' ordinal='4' />
            <column datatype='datetime' name='time' ordinal='5' />
            <column datatype='string' name='in_reply_to_screen_name' ordinal='6' />
            <column datatype='real' name='in_reply_to_status_id' ordinal='7' />
            <column datatype='real' name='in_reply_to_user_id' ordinal='8' />
            <column datatype='boolean' name='is_quote_status' ordinal='9' />
            <column datatype='string' name='lang' ordinal='10' />
            <column datatype='integer' name='retweet_count' ordinal='11' />
            <column datatype='integer' name='favorite_count' ordinal='12' />
            <column datatype='real' name='longitude' ordinal='13' />
            <column datatype='real' name='latitude' ordinal='14' />
            <column datatype='string' name='place_id' ordinal='15' />
            <column datatype='string' name='place_full_name' ordinal='16' />
            <column datatype='string' name='place_name' ordinal='17' />
            <column datatype='string' name='place_type' ordinal='18' />
            <column datatype='string' name='place_country_code' ordinal='19' />
            <column datatype='string' name='place_country' ordinal='20' />
            <column datatype='string' name='place_contained_within' ordinal='21' />
            <column datatype='string' name='place_attributes' ordinal='22' />
            <column datatype='string' name='place_bounding_box' ordinal='23' />
            <column datatype='string' name='source_url' ordinal='24' />
            <column datatype='boolean' name='truncated' ordinal='25' />
            <column datatype='string' name='entities' ordinal='26' />
            <column datatype='string' name='extended_entities' ordinal='27' />
            <column datatype='string' name='most_important_word' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;HK$&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_HK&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[handle]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>handle</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_retweet</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_retweet]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>is_retweet</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>original_author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[original_author]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>original_author</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_reply_to_screen_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[in_reply_to_screen_name]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>in_reply_to_screen_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_reply_to_status_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[in_reply_to_status_id]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>in_reply_to_status_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_reply_to_user_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[in_reply_to_user_id]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>in_reply_to_user_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_quote_status</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_quote_status]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>is_quote_status</remote-alias>
            <ordinal>9</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lang</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lang]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>lang</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[retweet_count]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>retweet_count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>favorite_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[favorite_count]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>favorite_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_id]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_full_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_full_name]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_full_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_name]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_type]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_type</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_country_code]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_country_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_country]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_country</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_contained_within</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_contained_within]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_contained_within</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_attributes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_attributes]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_attributes</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_bounding_box</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_bounding_box]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_bounding_box</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_url]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>source_url</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>truncated</remote-name>
            <remote-type>11</remote-type>
            <local-name>[truncated]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>truncated</remote-alias>
            <ordinal>25</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[entities]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>entities</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extended_entities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extended_entities]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>extended_entities</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>most_important_word</remote-name>
            <remote-type>129</remote-type>
            <local-name>[most_important_word]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>most_important_word</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='tweets_wmost_important_word.csv' datatype='table' name='[__tableau_internal_object_id__].[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]' role='measure' type='quantitative' />
      <column caption='Entities' datatype='string' name='[entities]' role='dimension' type='nominal' />
      <column caption='Extended Entities' datatype='string' name='[extended_entities]' role='dimension' type='nominal' />
      <column caption='Favorite Count' datatype='integer' name='[favorite_count]' role='measure' type='quantitative' />
      <column caption='Handle' datatype='string' name='[handle]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='In Reply To Screen Name' datatype='string' name='[in_reply_to_screen_name]' role='dimension' type='nominal' />
      <column caption='In Reply To Status Id' datatype='real' name='[in_reply_to_status_id]' role='dimension' type='ordinal' />
      <column caption='In Reply To User Id' datatype='real' name='[in_reply_to_user_id]' role='dimension' type='ordinal' />
      <column caption='Is Quote Status' datatype='boolean' name='[is_quote_status]' role='dimension' type='nominal' />
      <column caption='Is Retweet' datatype='boolean' name='[is_retweet]' role='dimension' type='nominal' />
      <column caption='Lang' datatype='string' name='[lang]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
      <column caption='Original Author' datatype='string' name='[original_author]' role='dimension' type='nominal' />
      <column caption='Place Attributes' datatype='string' name='[place_attributes]' role='dimension' type='nominal' />
      <column caption='Place Bounding Box' datatype='string' name='[place_bounding_box]' role='dimension' type='nominal' />
      <column caption='Place Contained Within' datatype='string' name='[place_contained_within]' role='dimension' type='nominal' />
      <column caption='Place Country' datatype='string' name='[place_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Place Country Code' datatype='string' name='[place_country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Place Full Name' datatype='string' name='[place_full_name]' role='dimension' type='nominal' />
      <column caption='Place Id' datatype='string' name='[place_id]' role='dimension' type='nominal' />
      <column caption='Place Name' datatype='string' name='[place_name]' role='dimension' type='nominal' />
      <column caption='Place Type' datatype='string' name='[place_type]' role='dimension' type='nominal' />
      <column caption='Retweet Count' datatype='integer' name='[retweet_count]' role='measure' type='quantitative' />
      <column caption='Source Url' datatype='string' name='[source_url]' role='dimension' type='nominal' />
      <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Truncated' datatype='boolean' name='[truncated]' role='dimension' type='nominal' />
      <column-instance column='[favorite_count]' derivation='Attribute' name='[attr:favorite_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[retweet_count]' derivation='Attribute' name='[attr:retweet_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[favorite_count]' derivation='Avg' name='[avg:favorite_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[retweet_count]' derivation='Avg' name='[avg:retweet_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[favorite_count]' derivation='Count' name='[cnt:favorite_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[handle]' derivation='None' name='[none:handle:nk]' pivot='key' type='nominal' />
      <column-instance column='[most_important_word]' derivation='None' name='[none:most_important_word:nk]' pivot='key' type='nominal' />
      <column-instance column='[favorite_count]' derivation='Sum' name='[sum:favorite_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[retweet_count]' derivation='Sum' name='[sum:retweet_count:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Handle,Most Important Word)' hidden='true' name='[Action (Handle,Most Important Word)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[handle]' />
          <groupfilter function='level-members' level='[most_important_word]' />
        </groupfilter>
      </group>
      <group caption='Action (Most Important Word)' hidden='true' name='[Action (Most Important Word)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[most_important_word]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:handle:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;HillaryClinton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;realDonaldTrump&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[attr:favorite_count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[avg:favorite_count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[cnt:favorite_count:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[sum:favorite_count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[attr:retweet_count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[avg:retweet_count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[sum:retweet_count:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:most_important_word:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;account&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;amazing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;attack&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;biased&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;brought&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;caucus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;committed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;courage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;days&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;democrats&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;doesnt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;elect&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;equality&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;failed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;fast&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;fix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;fund&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;gopdebate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;hands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;helping&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;hope&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;including&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;joe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;know&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;late&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;left&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;living&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;maga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;meet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;million&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;native&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;november&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;plans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;power&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;proud&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ready&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;reporter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;romney&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;schools&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;shouldnt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;speaking&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;stay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;sure&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;terrorist&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;tickets&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;total&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;treated&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;tweet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;violence&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;war&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;wife&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;worse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;zika&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;agenda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;apart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;beautiful&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;borders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;campaign&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;child&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;college&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;control&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;crowd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;defend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;discrimination&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;easier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;endorsement&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;expand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;federal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;foxandfriends&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;goes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;grow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hear&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;historic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;isis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;kansas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;kindness&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;leaders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;lightweight&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;lot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;miami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;movement&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;nh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;people&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;polls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;problem&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;radical&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;refuses&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;rich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;saturday&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;serve&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;smart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;stands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;super&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ted&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;thinking&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;took&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;truth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;using&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;vs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;week&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;wiprimary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;wont&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;york&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8p&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;able&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;air&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;article&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;bernie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;breaking&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;care&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;choice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;comes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;corybooker&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;dangerous&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;demconvention&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;divided&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;economy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;enforcement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;facebook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;finally&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;freedom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;guy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;held&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;immigration&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;jeb&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;killing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;learn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;listen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;loves&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;matter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;middleclass&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;nafta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ninety&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;oreillyfactor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;philadelphia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;post&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;progress&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rally&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;released&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;saying&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;seventy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;solve&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;state&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;supporters&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;temperament&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;thoughts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;town&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;tune&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;unity&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;vice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;wall&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;weve&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;workers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;young&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;american&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;bad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;bigotry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;bush&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;champion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cleveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;companies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;create&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;deals&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;deserves&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;donaldjtrumpjr&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;elizabethforma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;especially&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;false&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;folks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;game&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;god&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;graham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;happy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;high&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;house&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;instead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;join&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;las&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;letter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;look&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;makeamericagreatagain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;members&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;mitt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;nearly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ny&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;nyprimary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;party&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;police&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;pres&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;putin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;reality&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;respect&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;run&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;secretary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;spend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;street&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;taking&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;thank&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;times&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;true&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;unfit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;voice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;watch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;wins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;wow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;act&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;amendment&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;attacked&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;biden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;build&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;celebrate&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;class&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;common&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;course&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dc&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dems&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;disgrace&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dog&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;elected&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;eric&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;failing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;fl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;funding&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;got&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;happen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;heres&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;horrible&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;increase&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;joebiden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;known&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;legal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;lobby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;major&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;meeting&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;millionaires&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;nato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;nra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;packed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;play&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;powerful&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;proven&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;real&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;reporting&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;room&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;seanhannity&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;seriously&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;showed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;speaks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;stop&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;systemic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;terrorists&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ties&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;tremendous&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;twitter&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;virginia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;washington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;win&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;worst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;absolutely&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;allies&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;arena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ask&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;berniesanders&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;breaks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;career&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;chris&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;coming&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;cost&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;daughter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;democracy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;divides&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;education&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;enjoy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;facing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;financial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;friend&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;good&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;hell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;home&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;important&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;jebbush&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;kind&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;leave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;literally&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;low&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;mayor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;mike&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;nasty&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;nomination&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;orlando&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;piece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;potential&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;prisoners&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;progressive&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;rate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;remember&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;risk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;says&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;shes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;soon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;statement&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;supporting&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tbt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;terrible&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;thousand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tpp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;turn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;victims&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;want&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;whats&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;working&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;youre&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;african&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;answer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;based&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;billionaires&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;book&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;calls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;check&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;clue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;connecticut&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;crooked&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;decisions&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;disabilities&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;dumb&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;endorse&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;exactly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fbi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;foundation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;giving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;group&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;heading&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;hillaryclintons&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;idea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;justice&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;lead&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;life&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;loss&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;marco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;mexican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;morningjoe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;new&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;officers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pence&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;politics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;prevent&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;racism&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;reform&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;review&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;said&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sense&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sixteen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;stand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;su&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;succeed&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;taxes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;things&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;tonight&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;trumptrain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;use&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;votetrump&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;weapons&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;wonder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;yes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2nd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;appreciate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;believe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;born&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;children&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;color&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;convention&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;crowds&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;del&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;discuss&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;easily&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;endorses&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;expected&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;feel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;foxnews&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;going&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;growth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;heard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;history&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;illegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;isnt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;kentucky&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;khan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;leadership&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;like&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;louisiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;mass&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;michael&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;mr&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ms&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;nice&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;open&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;person&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;poor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;problems&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;raise&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;register&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;rico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;save&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;service&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sobre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;star&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;supertuesday&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;tedcruz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;thinks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;totally&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;try&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;values&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;wage&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;weeks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;word&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;yorkers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;affordable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;angry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;barack&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;black&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;california&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;charge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;close&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;congratulations&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;criminal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;debt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;didnt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;dream&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;eighteen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;en&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;event&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;far&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;forget&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;girl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;greatly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hateful&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hillary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;husband&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;interviewed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;judgment&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;law&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lied&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lose&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;manufacturing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;message&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;months&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;network&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;obamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;paul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;politician&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;press&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;questions&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;reckless&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;results&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;safe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;senate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;single&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;spoke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;student&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;tampa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;theyre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;told&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;trumppence16&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unlike&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;voters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ways&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;women&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;wsj&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;accept&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;allow&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;asked&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;best&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;boring&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;brexit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;case&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;citizen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;commanderinchief&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;countries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;david&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;democrat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;divisive&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;eighty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;entire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;fact&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;fired&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;friends&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;goofy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;help&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;honor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;imwithher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;job&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;king&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;leaving&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;live&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;lyin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;means&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;mikepence&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;nation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;nominee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;oval&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;plan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;potus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;protect&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ratings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;repeal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;reviews&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rnc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;sc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;short&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;south&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;statements&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;supports&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;terror&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;thousands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;trade&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;turned&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;victory&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;wanted&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;white&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;works&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;youve&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;add&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;americans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;badly&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;billclinton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;business&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;chance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;climate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;company&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;created&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;debate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;desperate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;donaldtrump&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;email&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;establishment&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;families&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;follow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;gave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;grateful&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;higher&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;housing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;inprimary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;interesting&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;joke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;latest&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lgbt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;looking&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;makes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;men&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;mom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;need&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;nytimes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pass&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;policies&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;presidency&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;qualified&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;really&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;respected&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;running&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;security&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;seventeen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;sign&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;spending&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;strength&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;talk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;thanks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;timkaine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;truly&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;union&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;vote&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;watched&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;wisconsin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;written&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;address&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;americas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ballot&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;billion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;businesses&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;change&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;citizens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;clinton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;conference&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;credit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;debatenight&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;despite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;dont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;emails&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;et&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;family&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;force&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;gets&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;great&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;harder&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;highest&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;huge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;interests&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;judge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;latino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;liar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;looks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;making&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;mental&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;moment&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;needs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;obama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;past&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pocahontas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;policy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;president&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;que&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;reason&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;response&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;russia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;seen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;signed&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;spent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;strong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;talking&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;thats&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;today&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;trump&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;united&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;voted&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;walls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;watching&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;wish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;wrong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;afraid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;announced&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;barriers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;board&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;called&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;charlotte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;club&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;congress&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;crisis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;decision&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;different&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;drop&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;end&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;everybody&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;favor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;forward&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;given&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;greta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;head&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;hillaryclinton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;homes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;iacaucus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;iowa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;june&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;laws&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;lies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;losing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;march&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;met&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;morning&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;nevada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;office&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;paying&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;politicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pretty&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;race&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;record&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;returns&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;safety&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;senator&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;share&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;situation&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;stage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;students&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;tax&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;thing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;tomorrow&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;trumps&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;usa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;votes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;weak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;womens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;year&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;afternoon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;anymore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;beat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;border&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;came&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;chelseaclinton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;cnn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;continue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;crookedhillary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;defeat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;disaster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;early&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;endorsed&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;exciting&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;fear&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;fox&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;global&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;groups&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;health&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;hillarys&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ideas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;insults&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;kaine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;leader&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;lift&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;lost&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;mark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;mexico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;mother&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;news&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ohio&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pennsylvania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;poll&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;primary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;racist&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;refugees&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;rhetoric&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;san&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sent&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;small&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;standing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;success&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;successful&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;team&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;think&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;tonights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;trust&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;understands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;used&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;voting&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;wednesday&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;wonderful&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;yesterday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;action&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;america&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;attacks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;big&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;building&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;clean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;communities&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;court&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dead&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;demsinphilly&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dollars&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;election&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;erictrump&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;fair&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;funny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;gov&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;happened&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;heritage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hotel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;incredible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;joenbc&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;knows&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;let&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;long&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;majority&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;megynkelly&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;melaniatrump&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;mind&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;nbcnewsforum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;para&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;playing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;prayers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;public&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;realdonaldtrump&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;republican&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;rt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;second&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;showing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;special&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;stories&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;taken&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;texas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tim&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tried&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;unbelievable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;vision&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;wasnt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;winner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;worth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;abortion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;access&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;allowed&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;atlantic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;better&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;bring&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;casinos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;citizenship&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;comments&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;country&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;day&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;democratic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;dnc&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;el&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;equal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;facts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;fitn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;fun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;gop&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;helped&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;honored&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;imwithyou&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;jobs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;knew&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;led&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;lives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;lying&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;media&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;military&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;national&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;north&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;owner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;planned&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;poverty&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;protecting&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;read&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;report&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;rncincle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;school&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;senwarren&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;shot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;speak&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;states&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;supreme&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;terrorism&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;threat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;trail&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tv&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;video&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;wants&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;whos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;world&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;zero&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3pm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;7pm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;agree&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;arent&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;believes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bought&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;candidates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;china&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;colorado&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;correct&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cruz&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;delegates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;disgusting&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;easy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;endorsing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;experience&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fight&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fraud&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;gold&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;gun&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;heart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;hit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;imagine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;issues&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;kids&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;leading&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;line&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;little&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;love&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;massive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;muslim&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;night&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;opportunity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;personal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;por&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;process&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;raised&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;registered&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;rigged&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;saw&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;set&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;social&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;start&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;support&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;television&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;thirteen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;tough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;trying&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;veterans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;wages&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;went&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;words&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;youll&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;afford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;amp&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ban&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;birthday&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;buy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;caucusfortrump&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;changing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;clintons&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;congrats&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;crime&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;debates2016&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;destroy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;doubt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;employees&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;evening&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fantastic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;foreign&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;getting&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;greatest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;highly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hurt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;interview&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;judgement&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;latinos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;los&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;mess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;money&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;obamacare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;path&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;political&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;presidential&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;puerto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;question&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;received&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;rest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sees&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;simple&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;spirit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;stronger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;talks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;theres&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;todays&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;trump2016&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;university&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;voter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;way&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;woman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;wrote&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;actually&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;americafirst&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;away&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;biggest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;built&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;carson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;challenges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;clear&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;community&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;crazy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;deal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;deserve&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;donald&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;elizabeth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;es&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;faith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;flotus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;future&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;governor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;happening&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hours&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;indiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;john&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;la&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;lets&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;longer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;make&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;melania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;miss&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;nbc&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;nc&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;numbers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;parents&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pm&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;prepared&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pushing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;realdonaldtrumps&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;republicans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rubio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;secret&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;shows&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;speech&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;story&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;takes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;text&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;time&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;trillion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unfair&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;visit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;waste&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;winning&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;wouldnt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;abc&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ahead&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;arizona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;benefits&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;break&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;card&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;chip&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;come&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;corrupt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cut&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;demand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;dishonest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;economic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;energy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;face&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fighting&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;free&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;general&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;golf&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;guns&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hits&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;immigrants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ivankatrump&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;killed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;leads&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;list&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;loved&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;mate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;maybe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;middle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;muslims&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;nights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;order&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;phony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;possible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;profit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;rallies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;release&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;right&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;say&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;seven&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;society&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;started&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;supported&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;thirty&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tower&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tuesday&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;vets&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;wait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;west&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;work&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;youmakeamericagreatagain&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tweets_wmost_important_word.csv' id='tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D'>
            <properties context=''>
              <relation connection='textscan.1fgaec50kblvxt13vnvyp07823aj' name='tweets_wmost_important_word.csv' table='[tweets_wmost_important_word#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_HK' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='handle' ordinal='1' />
                  <column datatype='string' name='text' ordinal='2' />
                  <column datatype='boolean' name='is_retweet' ordinal='3' />
                  <column datatype='string' name='original_author' ordinal='4' />
                  <column datatype='datetime' name='time' ordinal='5' />
                  <column datatype='string' name='in_reply_to_screen_name' ordinal='6' />
                  <column datatype='real' name='in_reply_to_status_id' ordinal='7' />
                  <column datatype='real' name='in_reply_to_user_id' ordinal='8' />
                  <column datatype='boolean' name='is_quote_status' ordinal='9' />
                  <column datatype='string' name='lang' ordinal='10' />
                  <column datatype='integer' name='retweet_count' ordinal='11' />
                  <column datatype='integer' name='favorite_count' ordinal='12' />
                  <column datatype='real' name='longitude' ordinal='13' />
                  <column datatype='real' name='latitude' ordinal='14' />
                  <column datatype='string' name='place_id' ordinal='15' />
                  <column datatype='string' name='place_full_name' ordinal='16' />
                  <column datatype='string' name='place_name' ordinal='17' />
                  <column datatype='string' name='place_type' ordinal='18' />
                  <column datatype='string' name='place_country_code' ordinal='19' />
                  <column datatype='string' name='place_country' ordinal='20' />
                  <column datatype='string' name='place_contained_within' ordinal='21' />
                  <column datatype='string' name='place_attributes' ordinal='22' />
                  <column datatype='string' name='place_bounding_box' ordinal='23' />
                  <column datatype='string' name='source_url' ordinal='24' />
                  <column datatype='boolean' name='truncated' ordinal='25' />
                  <column datatype='string' name='entities' ordinal='26' />
                  <column datatype='string' name='extended_entities' ordinal='27' />
                  <column datatype='string' name='most_important_word' ordinal='28' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Draft 1 ' type='sheet' worksheet='Most Important Word Group' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Draft 1 ' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_EA3749E0E7CB499F83D8585D3168098E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Draft 2' type='sheet' worksheet='Most Important Word Group' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Draft 2' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_1AD42621DEA84FC9BDF3BB8AFF15BE9A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Draft 3' type='sheet' worksheet='Most Important Word Group Filtered' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Draft 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Engagement Bar Chart (Average)'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_wmost_important_word' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' />
          </datasources>
          <datasource-dependencies datasource='federated.0lw0fu81fuc9mv1etwfic1i8oinb'>
            <column-instance column='[favorite_count]' derivation='Avg' name='[avg:favorite_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retweet_count]' derivation='Avg' name='[avg:retweet_count:qk]' pivot='key' type='quantitative' />
            <column caption='Favorite Count' datatype='integer' name='[favorite_count]' role='measure' type='quantitative' />
            <column caption='Handle' datatype='string' name='[handle]' role='dimension' type='nominal' />
            <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
            <column caption='Retweet Count' datatype='integer' name='[retweet_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[avg:favorite_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[avg:retweet_count:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Handle,Most Important Word)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[handle]' />
              <groupfilter function='level-members' level='[most_important_word]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Most Important Word)]'>
            <groupfilter function='member' level='[most_important_word]' member='&quot;bought&quot;' user:ui-action-filter='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]</column>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Most Important Word)]</column>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Handle,Most Important Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Multiple Values]</rows>
        <cols>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{599F7302-02CC-4E97-B541-3C5D4CD81D2C}' />
    </worksheet>
    <worksheet name='Engagement Bar Chart for Each MIW'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_wmost_important_word' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' />
          </datasources>
          <datasource-dependencies datasource='federated.0lw0fu81fuc9mv1etwfic1i8oinb'>
            <column-instance column='[favorite_count]' derivation='Avg' name='[avg:favorite_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retweet_count]' derivation='Avg' name='[avg:retweet_count:qk]' pivot='key' type='quantitative' />
            <column caption='Favorite Count' datatype='integer' name='[favorite_count]' role='measure' type='quantitative' />
            <column caption='Handle' datatype='string' name='[handle]' role='dimension' type='nominal' />
            <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
            <column-instance column='[most_important_word]' derivation='None' name='[none:most_important_word:nk]' pivot='key' type='nominal' />
            <column caption='Retweet Count' datatype='integer' name='[retweet_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[avg:favorite_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[avg:retweet_count:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Handle,Most Important Word)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[handle]' />
              <groupfilter function='level-members' level='[most_important_word]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Most Important Word)]'>
            <groupfilter function='level-members' level='[most_important_word]' user:ui-action-filter='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]</column>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Most Important Word)]</column>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Handle,Most Important Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Multiple Values]</rows>
        <cols>([federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names] / [federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk])</cols>
      </table>
      <simple-id uuid='{06941261-3C42-4261-B4BD-0BCC1DCFD5FB}' />
    </worksheet>
    <worksheet name='Most Important Word Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_wmost_important_word' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' />
          </datasources>
          <datasource-dependencies datasource='federated.0lw0fu81fuc9mv1etwfic1i8oinb'>
            <column-instance column='[most_important_word]' derivation='Count' name='[cnt:most_important_word:qk]' pivot='key' type='quantitative' />
            <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
            <column-instance column='[most_important_word]' derivation='None' name='[none:most_important_word:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' />
              <size column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[cnt:most_important_word:qk]' />
              <text column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{444DE84C-915D-4D8E-BF9D-C9EEB26694EA}' />
    </worksheet>
    <worksheet name='Most Important Word Group Filtered'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_wmost_important_word' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' />
          </datasources>
          <datasource-dependencies datasource='federated.0lw0fu81fuc9mv1etwfic1i8oinb'>
            <column-instance column='[most_important_word]' derivation='Count' name='[cnt:most_important_word:qk]' pivot='key' type='quantitative' />
            <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
            <column-instance column='[most_important_word]' derivation='None' name='[none:most_important_word:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]'>
            <groupfilter expression='COUNT([most_important_word]) &gt; 8' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:most_important_word:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' />
              <size column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[cnt:most_important_word:qk]' />
              <text column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BFE024D6-8EB1-4A7F-BCCE-B595BB74BD85}' />
    </worksheet>
    <worksheet name='Tweet Content'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_wmost_important_word' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' />
          </datasources>
          <datasource-dependencies datasource='federated.0lw0fu81fuc9mv1etwfic1i8oinb'>
            <column caption='Handle' datatype='string' name='[handle]' role='dimension' type='nominal' />
            <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
            <column-instance column='[handle]' derivation='None' name='[none:handle:nk]' pivot='key' type='nominal' />
            <column-instance column='[text]' derivation='None' name='[none:text:nk]' pivot='key' type='nominal' />
            <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Handle,Most Important Word)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[handle]' />
              <groupfilter function='level-members' level='[most_important_word]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Most Important Word)]'>
            <groupfilter function='member' level='[most_important_word]' member='&quot;bought&quot;' user:ui-action-filter='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Handle,Most Important Word)]</column>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Most Important Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]' value='37' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:text:nk]' value='856' />
            <format attr='height-header' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:text:nk] / [federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{A6499AA8-A578-4FCE-8D4C-AFDD152EA535}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Draft 1 '>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98690' id='7' param='horz' type-v2='layout-flow' w='99304' x='348' y='655'>
            <zone h='98690' id='5' type-v2='layout-basic' w='92338' x='348' y='655'>
              <zone h='62654' id='3' name='Most Important Word Group' w='51241' x='348' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98690' id='9' name='Engagement Bar Chart for Each MIW' w='41097' x='51589' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36036' id='11' name='Tweet Content' w='51241' x='348' y='63309'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98690' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='6966' x='92686' y='655'>
              <zone h='92793' id='8' name='Most Important Word Group' pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' type-v2='color' w='6966' x='92686' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5897' id='10' name='Engagement Bar Chart for Each MIW' pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]' type-v2='color' w='6966' x='92686' y='93448'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98690' id='29' param='vert' type-v2='layout-flow' w='99304' x='348' y='655'>
                <zone fixed-size='280' h='62654' id='3' is-fixed='true' name='Most Important Word Group' w='51241' x='348' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='92793' id='8' name='Most Important Word Group' pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' type-v2='color' w='6966' x='92686' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98690' id='9' is-fixed='true' name='Engagement Bar Chart for Each MIW' w='41097' x='51589' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5897' id='10' name='Engagement Bar Chart for Each MIW' pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]' type-v2='color' w='6966' x='92686' y='93448'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36036' id='11' is-fixed='true' name='Tweet Content' w='51241' x='348' y='63309'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BFB583D3-9BD5-4810-970A-18D558B43C57}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Draft 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98690' id='7' param='horz' type-v2='layout-flow' w='99304' x='348' y='655'>
            <zone h='98690' id='5' type-v2='layout-basic' w='92338' x='348' y='655'>
              <zone h='62654' id='18' name='Most Important Word Group' w='51241' x='348' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98690' id='20' name='Engagement Bar Chart (Average)' w='41097' x='51589' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36036' id='11' name='Tweet Content' w='51241' x='348' y='63309'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98690' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='6966' x='92686' y='655'>
              <zone h='49345' id='15' type-v2='empty' w='6966' x='92686' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49345' id='19' type-v2='empty' w='6966' x='92686' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98690' id='29' param='vert' type-v2='layout-flow' w='99304' x='348' y='655'>
                <zone fixed-size='280' h='62654' id='18' is-fixed='true' name='Most Important Word Group' w='51241' x='348' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98690' id='20' is-fixed='true' name='Engagement Bar Chart (Average)' w='41097' x='51589' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36036' id='11' is-fixed='true' name='Tweet Content' w='51241' x='348' y='63309'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B83A59F5-B2B1-410F-A5E8-1FCA7E07BE0D}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Draft 3'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98690' id='7' param='horz' type-v2='layout-flow' w='99304' x='348' y='655'>
            <zone h='98690' id='5' type-v2='layout-basic' w='92338' x='348' y='655'>
              <zone h='66012' id='25' name='Most Important Word Group Filtered' w='52895' x='348' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98690' id='20' name='Engagement Bar Chart (Average)' w='39443' x='53243' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32678' id='11' name='Tweet Content' w='52895' x='348' y='66667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98690' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='6966' x='92686' y='655'>
              <zone h='49345' id='15' type-v2='empty' w='6966' x='92686' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49345' id='19' type-v2='empty' w='6966' x='92686' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98690' id='30' param='vert' type-v2='layout-flow' w='99304' x='348' y='655'>
                <zone fixed-size='280' h='66012' id='25' is-fixed='true' name='Most Important Word Group Filtered' w='52895' x='348' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98690' id='20' is-fixed='true' name='Engagement Bar Chart (Average)' w='39443' x='53243' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32678' id='11' is-fixed='true' name='Tweet Content' w='52895' x='348' y='66667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{04E9698C-08A2-44E6-AF54-49D1DE9EF44A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Most Important Word Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDF2D48C-3EEE-4967-89A5-940CBEA776B6}' />
    </window>
    <window class='worksheet' name='Most Important Word Group Filtered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B653682A-1A0E-4CD6-A952-145288204FD6}' />
    </window>
    <window class='worksheet' name='Engagement Bar Chart for Each MIW'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61A7FEAF-C43A-49DE-8C14-C3AE20EA2D15}' />
    </window>
    <window class='worksheet' name='Engagement Bar Chart (Average)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A9AE870-EC05-4640-9A98-D49B1DCB3EB6}' />
    </window>
    <window class='worksheet' name='Tweet Content'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:text:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3B13041-594C-48E5-82C5-A57F2BC0D25F}' />
    </window>
    <window class='dashboard' name='Draft 1 '>
      <viewpoints>
        <viewpoint name='Engagement Bar Chart for Each MIW'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Most Important Word Group'>
          <highlight>
            <color-one-way>
              <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Tweet Content' />
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{C97C64EF-7EA9-4B6C-A13A-D20E2D33E644}' />
    </window>
    <window class='dashboard' name='Draft 2'>
      <viewpoints>
        <viewpoint name='Engagement Bar Chart (Average)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Most Important Word Group'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[cnt:most_important_word:qk]</field>
                    <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>44</value>
                  <value>&quot;makeamericagreatagain&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Tweet Content' />
      </viewpoints>
      <active id='18' />
      <simple-id uuid='{750FC9A5-98B8-4B52-AD35-9864F4AA1716}' />
    </window>
    <window class='dashboard' maximized='true' name='Draft 3'>
      <viewpoints>
        <viewpoint name='Engagement Bar Chart (Average)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Most Important Word Group Filtered'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[cnt:most_important_word:qk]</field>
                    <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>10</value>
                  <value>&quot;bought&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Tweet Content' />
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{5C2DC9B9-2CEE-4B50-BD6C-C4A00FA07D80}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Draft 1 ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Draft 2' width='192'>
      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
      gw2uEf4H3f0/isVKCk4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Draft 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO292ZMk15Xm9zt3cfeIzCwUCJAECYAEwZ3N5gISpLFH7B6ZyUyaRU8jPclk
      Mv0J+kNkkp71IJlsHjRPkmnUbT3aRtaUTTe7uYIgCGIhAAIktqpCVWVlRLjf5ejheuRSuWd4
      ZkVWxmcGZGZk1E0P93vuPfec73xHVFVZYYUrCvOgL2CFFR4kVgawwpXGygBWuNJYGcAKVxor
      A1jhSmOPAdy99QFvv3cDAFXllZd+TZeP+ufK/UGkGzdvLnxRqvvHPcn7bnz4IaoQ2i3e+eMH
      ANy6cYN0gjjXK6+8smfcN1/7LS/99nVSXixIdufm+/zkJz/hpz/9BW2K/PGP70Gc8Mrr75z4
      cx53vSucHXsM4JWf/z3/5kd/hwJx6wP+h//+f+SjrkyInPP2A9Pt7zN/9Zd/XX7Xj/Hjv/sx
      9O+b/5s9/3bXQz/sdx+98QL/7qWdCXL/e+Y/v/2rH/PC729uj/fyL/6em9PIGy/9gv/jRz9G
      Uf7d3/4tRnaMRWHf38s58+qrr/WfQPnR//3X+Ec+ydOf2ODWna0D37/ns9z3+92T+uV/+Ac+
      9ZWv853vfIvaGkSANOG1N97hxus/5ce/fe/Qce9/ffc927neFRaB2/uj4cnrng+2Im//9Jc8
      /2fPM58Qo0c+zq3NCd/+3KP8/Wu3eeLjj/LFzzzOW2+9yQsvvsw3vvE1ZD6MRv7l//Qv+frX
      v8ZLr/6er37xM9y4l3lMP+Sj+mnkzts8880f8v6rP8WNH+HmrU3+4s++xv/8r/4S8df4xudG
      vH7jPZ66XmHDXd6/cYd3b9zhL777DP/rv3mRrz77KPfMI1Q33+aPf5jxWP11nnricb70+ad4
      /Y0/Mvuo5UufHDNpp5hqjdvvvsGPf/0WazbwxBe+xcs//xumd+/y1ef/MX947UU+/qmnuLvV
      lmsP9/ioq/jEhuNXL77GZ77wVf6fv/7fuXHnLs987Tvce/d3XPvY49yZJL78WOJd9wW+95Tw
      Vz95B7n9Oo9/5ou899ab/Pl/9M+5PvLcf39/9rOf8c/+g+8B8Id3/sBrt2/zqQ3De2/8Gqk3
      uHVnyg++fJ1/9W9fYm1tg2987jG2guH9D2/xz//DP+cv/+r/4qmnP8O0S+c4La4O9p0Bvvn8
      d3jhH37KrRY+PrJoTtyLhuef/y5+dg/Wr+OIWOe59ujHeeaZz/Gtb3xt30CPffLTfPu553j0
      +iM899y3idNNjLH8yTe+zQ//4oe8/vIvuT1Rvvf88zwx6vhgMzN69NP8l//Ff8qzT3+GL3zl
      T/jsk5/g5oc3yMD7770LwGc//2W++9y32dq8y9NPf4Yv/cmf8tQTjwPw+FPPcusPr5HF8eyT
      j/Grn/2Sj33qGV7+zW/43j/6C3745z/g1V+/RLs15Z/+J/85n30kMv7kl/nOc9/m2lpdLlxA
      EHyzzlc++zi/euVN2ukWf/FP/gXf/+LjzPzjPP/89zDTj5jdNwd9vc43v/ltfvCNz/LKWzf6
      VyO/+sXP+enPXiCkvf7kU08/xRe/+nU+++Qn+e0rr2GN4d7mbXKGx5/8Av/Zv/hn/Obl3+Kc
      hck9Xn3553z66/+I5577FqPKLvrsV+AAA7DNo4Rbr9I88mkAxBhSO2UynbIZMw7H97//fe7+
      /iU+6gw5BdoQTvTHVJW2nfHKi7/kyWe+gsQpm5Mp797p+Nia4eOf+AQA1foGk49uEWPgjXc+
      4GtfevbA8cbX1rl76xYxxvJhqg2mH75Gff0JPvn0M/zt3/yIZ599mic//QSvvf473vndazz+
      5FOMHnmU9cYxuvY4N997k63N2zs7gNtg3WzxzgcfsbW1CWKox9d4ZL2B+hpp830mk3tsRcO1
      jTVm0y3+8Ie3SVnJKdCFjhdfeZtnnvxYf5WOP/3Wt/nOc9/AW3Pf9V/n7s0bxBh59PqjfOlr
      X+f5576JEbbvxWOPPspTz36Z57//PE8+9Rneee1lNj+6waRd7QCDQHfh7q2b2ibVjz58Vydd
      0ts3PtQ2qYZ2oi/88gXdmgXNOeorv3lR3373Q1VV3bpzU1/8zavbY9y8eVM1J71589a+rz/9
      t/+b/ugnL+o7791QVdUUZvrir17Qu1szTaHVW7fv9qNkffuNV/WPH9zSu7c+0N+88ju9ceOm
      xm6it+9sqaagN2/dVs1Z33ztZX3/5p3tv//BH9/We7NOVbO+9eabmvrX3337DX39rT9onl9j
      jzs3398efxs56e9e+Y2+/NobmnLWj27e1JjLr9rJpr7wwq902kVVzfr6b1/SDz68oTc/uqt/
      /a//F/3ZL3+pN27f2zX+DZ3FtP3zzZs3VVOnN2+Va55/ztjN9Fe//IV+cOuuhtk9vX1vWi4l
      R3351y/o2+9+WK79/T/oK7/7vd7cfb0rnBmienFcoPfeepX1T32R9eqi/uLF4nevvcZnnv0C
      bhVcvjS4UANYYYVlw2qtWuFKwx3/lhXOGzlncj4y43hqOLd6tCfBnrukqkwnE/ID8IoEcGLO
      nBk9fFwBaxhyWBGFE0a+ToL/+r/975i8+yIubQ0y3t+89D7/+v/8m0HGEhFiPLlxWivHv2kX
      nBjkNA8nJzSdMAImBiiJykP//v0v3Lx5k9B1J7+ggSAiXLcjNA4c3rMGGTXogpSG3TCiyO3F
      KR9zxLt3+K9+2FC9/+tBxkv5GT7cvDvIWN5Y7tw9+XxYGznUnvxef8xW2FM8mzS5h04mJ3uz
      c6AZ0uEGvDoDrHClcTkNQGTv1xMinXTrPMu1DIR7J0hwbfbv0Z7bdBRUc3/GWAX7DsJSnpTE
      O0AhA6LFl8sZrIGYy4HBWMQKOeRtV0+MoGIQTeQDuDJZM6mLJMAKZBWEjGKwRpAyDCElnLWY
      +b/J0NQ1+6a6WMQLSKGMmGZEvrfJsbPyCPz8rQniLV961PHSh4FnH6v45HXLh7cSb9/u2Njw
      vPn+lE89VvPy2xP+7CvX+Nz1gx9jjoHQzjC+QUQIs4CvK0LbYb0jx4hxjhRieb3rsM6RYqJq
      amRg4z4KbTejiwlBqKuKtuuoK0/bdXhfU/vzmarLuwOIIFbQpBhnwPQPwwhYC2j5XeUQY0Ag
      J4WcDz1HhBhJOdF2HTFlau9JKdGGlhADMQa6GBlVNbH/uZA98+GT2vpyzkDQ0C00+QGurzse
      s8IvbkZ+8CnH//tmS6uZ374x4fEnRmxOIk8/XuOAz3+y4ZlHDucExZio6hrNiZTKwhFmLX7U
      kGKk3LSMpsBs2lE1DbFrQfOgQYOTIGXwRvDe0YWAamLadviqJqV4bn93KQ1ArIGs5JhAlZwy
      ZKXnMvcTvKzXGmKhZ6fcP8zUG8h+eOcQESrn8dbShoCIoXIeZwxJoXaOWddhjSFRDueHroSa
      0a6FlNGc+h1rsc8+MnAX+M7HHT9+L/Eff6nmhbdaPv/MiNd/v8VHbeaJDccT1xxPrlveunO4
      y2SdJYSIdQ7b85Bc5ekmE1QF6x1iBHGOuqnoZjNcVYOYC139oTwb5zzWWry1iFgq77HG4M8x
      pLuULlBu966k2vUrwK7TvB4WN1fKZDwA3nm826Eo309WnjM05ve7PvZKFZKiqRDp5l8XwRee
      GPGF/vs/v1au6N9b96DKZpv43Ccb1n0/OTeOfnzWeeyuz+u8QzVjk8PV1fYkt77q3z/q33f/
      nTl/7JnklaWqdvFlzPmt00tpAIu6EQ8lRPjTp0YDDGPwzfGmfVWwlC7QCitcFFYGsMKVxsoA
      VrjSWM4zwBVEuv550kCBl/zKDH9IJOy0sPJwr5ErAzgLrIFHrw023A/+/X/Mf/N3/x9JPz7I
      eO7jY3ZiWischSthAElbsg5HN3b4QRkQ3/3uc/zJn32LoMOQEGu5fhT/a4VduBIG0LUT8qA8
      oNG5JWdU9cgk1HG/P+nfmOOiE17LhqUyAPFuh/Iw1JjGwHll0nOmy4oVIcaAbGcxz/4ZukmH
      cRbrTCGwqSLGlMSfCDllnLcl+43g/OG+vuZECAHvPV3bUdUVXdvhnEU1kdRRVQ7NGTPQmeGy
      YakM4MOUCXHYLJg1mY1BR9yNTEyZpDBrW4wRYtUwrs+eSRURNGVCTLjG0W4GjDMYAzEqRpSg
      gmgCY1F/OPtiNtlCe15PjjOmWRHJxJAx3oBm2ukE42quqszQUhnAecPVI0QzWRVjDDklxFo0
      RXKKZyaAqUJdVRihiFgtgsJPw3mLMQbrDcZZckwYY3BV2RmMMcfqljrvSSkjKGIsxtrClTIW
      IwZxnq6bUY/XFrvmS4wrZQCaIwpYV6EpFpq1lonSxjP4SWKp/U6Y0Ah0MePs2UOH1Whv9Kae
      K9bV+x/VcQ/P16NdfKc5jWKHBqE54evRovy9S42lNIByDBAQwYiSMhgjWIGY9Mw1y6mf5Cmm
      wvZMCRFI8YxTQAR7n7+/2yCWHWIs/hjfRwTWxie/P96DHvF2g+B27VxGEpijnqeAKPPSH2kM
      Ypsjr6HLjpT7sxNamMSHYCkNwPduhIiggLfQhkQ9qsiz9qjPczS2DUcLP37+0koa6WhU0xO/
      9TipgFo8a3nXu44L14oh2wRaonjiOHbW3ps1bMXcj3208S7lcpWUXoIdBCWm4rfP2oA5R2rs
      ClcPS7kDCEqXFO6rBLpfXXmFFRbFUi6n4RQ6NA8Lrng+6oFhKXeAq4hroUbiMMH4aaVEXbw6
      DUCXc40cDCsDOAMEpbYDS6xEAwPRNVLOxIG4TyIsXOe8zFgZwFmRh5NGLLj4OtwVrogBjNY2
      Di+iPwOsNZCH0fG8H7MQqJzbXnS1b0bYZsGQqXtli5NgTnpLXYepKkSZi2mQY0C837O4x67D
      11erXvhKGACqyKCV9jsdG+ejHjQl25CovN0W3BLk2MNuiJE2lHDvyAqzpDhriVkJod1jHMch
      TCe0s46qbsg6o5sW2RMxBo0BgxCnW6hYnLPkrCsDWOHk0Jy4O0tl4jiDpkSXhcaXdqg5KW1I
      CMqkjTx2fQ1/nAUIqBaVuq0ubMuaGGOwckozFkM1ajAIKuCbpucQZaz3hRNlHdZX5Di0S3c5
      cKUNIIaAimCMxZ6Rht3UnhgSxkAXS7GYN0JQSgpfwRphfVRxEuXwjeYI6RN/OtJaNTp4rD2n
      jbra+/WKYakMoPYOa4aNrlhjgDLm1mTS64BC6nn8YgTEYM8Q6jDW0QDzpmBzGvS0DYwqd2aj
      Wi4ITodji5Ya4+XZbZbKAK65iJqBk2Cyo1coprA/syrWCDnrmSb+cRgtUA+wdFAIAz6SI3lv
      DwD7DGBcVaQHwLeRC/ibOWeausGgxKzUVfmbV70s8CpjnwEsLr53Rqhy3n1p1sfj7e+vagXU
      CnuxVC7QCssL1Uw7mSLWQer7CqRSpWasQ1MsP1tHThExlnp0NG9/GXAqA8g5I8Y8zJnxB4dK
      OFGY6ASwZFwYRgnAOgjz1gzWopoRazGi4CtyjMR2ivUVKWWsow/dLpmzfwgONYBJ2xJVEWDk
      HdMQ8WLAlnh0GwJNVeMeikjHaSGoGfigqwEZSBcohkQ3HcihrOvtEGlOaTu0KiJoCFRNjWaP
      GIMxAsZdKmbr4TuACAZwInQpk1OkNY6YEo0pCZmUM85cQWdaEzq9MeiQMn580PGGhoihWdsb
      DnW9hr/0kirzPgNHD7T9v5P+5V3/nfBfyPEZ9zkONQBvLaqKESFrJluHtw5rS/iwi/EhiXMv
      J7qYqJwlpoy1D4/bqSrcmw0TajHW0Ixn2+WSc3ysmfCxA44foiOk2+uaHWkAO7BUuzqNYKC6
      RJ3IRS6m7He3atv8+9MquU1mHWIMbRdobZ+h7iIxK2vjal8R/qWD9q2vBhlKQcM+AzgUuSr1
      trtweWbxAnDpLuQh5eEKYUxVmQVFpKhW0J+ZMkUepXJl5baizJLSOKGNSu2ELiqV368qkbIy
      rgyqriTtcjEgX9qmDXVOXqHHlTAAYjuwAZQEmmZFBUICp4X3oyjjSghJSLm8FigebEhKiErI
      MPZCG8p7d2Nce1JWmr4tqKLM2ohx9oEFHAb9q0u2g10NAzgniAjOgEG33aycoUtFygXo26zC
      NCgjLxhT9LhKI8z9k8Faw96wgrA2eoBENVUe3Ryw9qGqmCzRiWZlAAtAjBQV/gP9kp3Xupip
      /Q5Neo4DxN6WEtoNmKM3hmWqfrskj+Byo3Jm1a5iSbFkJf/Db40rotsKR2GpdoC7OiXosGL+
      Vi3LnWJa4UFiqQwgpEAYWG0h6yXJVBtHHmizcnjqgQZzlyjfcxY83J/uEuGORMJAlVKPuBHX
      ZaBTh5xDg52BDH0I93apDUBKawe8MYScAO1f26Xvsf0VvK0I6byrCkDFMDtlfe4KBSJwrR7o
      6GnkWHHp47CUBjDyayRNNK6miy2KslGtkVKHisWQAUsXZzR+TM6BhPbJpvO/vohyMw/7h+5v
      47SXQlESag/FgV4ZTAEP1YUjqktpADEHkiohtYQcsWKJKRBSpLJlB4gacNYRcyCmDmergbV/
      HgxyTKQMqQvYypfa5ZJiRlPGVg6z4kMMhqU0gLkbM+0PxIk4F3YgHnJIDoNSHR4cQpeoRp4c
      TWmW12WqNU+YRnJSxOlDYgC6zXPKPet49/K1x8Htd8Pz2AGX0gCGhvrxsFwgW0OeDDfeLhgD
      sUvYXmqFvu2qWIOQ9/T4vRCIwCH6QmcaznvQTM6Ze12gcZY70ymNr0iqGFXEOkRT3wlIEFFq
      X1Odg+FfCQO4XbkDeTdnhcWcm7SNbw6O3vgHxJtQhHsbjw42nhdlfbJZxlYlxETlPAqMfAWa
      2AqRqi+6ssbQOLPwYfcwXAkDWGH5YIzlkQN3Fkt9ksqygXDlDGDuQsyLVebfr3A2POh7qMHD
      SZOdur9U/0oZQAqpHKiMIYVYDpMivbTHygiOgqqSQocYS4yRqqro2hmuqtCs5BQwxjKbzRit
      rRFDxHtPygl/jit6vtOeIqw62/fKlTKA0EZ8ZUkxkVNGxNDNAuNHll+/5sFDCSEgtKgq0xip
      m5rYdSiKpoypHb6q6aYTVJWcIv4osd8lwJUyAFdZxEgJuaUMItRjT4qK8w92BxARZMCD+mDY
      SbTjqxo0EWPCWUs3myLWY60h9xVxOUWs80V31VqsXW4u1j4D0KoB9wC6NApImCEyLEPb7BrP
      VeXjGsD55Xowddfh0zCN7Uxt0aF6mJkK0gYiBudLMYurykRPKVHVTamH7r0cXx3j7oigzfjo
      95wUInBvsWq1/TuAHnBSuAgofKKuQAcuURDLR5cgQ5xzIA9kAKo1Q1HY9JADprGOZnxGB2KJ
      HsdyuUAaYOB6AMggw35MJ5bHq+Fi4wCkzWHHW+FEOHRmxBRx9mQTZ9bOCElpvGUWIuOmYTKb
      sj4aM2tniHE01fLUgQ4Bm4ddxuYOi87VJRRiUionJC27fa+8sl2AL3J0+LFrI22GcW3Kuaff
      3LuQaCpbZFauuLjZgTNcVbl7b5O18ZjprMM5x8gbZiETc0K1CGPFGDDWsdbUhMmUNsJa7ZmF
      CAiqiWkXaE5Bf1VVtiYB5yzWQspQe0PWor3zsD+uWZtxzhBjJibFGUPIkGPGmCKlUjshUhQp
      RvXhdySEhK0dm5sdWIOh3MtZm8gxkxCurT1cC9NpcaABiAiVr3DWUFcNKQdCCGQ1jJqGEBKQ
      MdaCKvcmE+q6IYSOLkaM8cSYUS0VRemU9NeYFGczbQcxF7FXgGZUzbsRPbQQSgebueSKKqBl
      IfBO8B68LZEsjtmFnDVYJ3RSJr9QGpEYSThvaadxm3B2+PUodRzOLbV2uR7goT7OqG7IWlYM
      MISUGNvSo9ZVBlDuTaesjcakFMkpMW4aupjwVlDnSQrjyoOcPOJSjM/gbNnzU5cw1uDNUp2d
      zg1Ns/9eOWDU76LVrteOK62qR2V1v35tb2Sm8kXZrj5JlxAFM6AukNQeDuE7PQgcagDW2l0C
      TZZ6twp073deW1svvzU7H6gYDIzqs4cZx/2Dc0AzQCuXOtXkARtll7PRw0G/vvQw823ybFiu
      KNA5Qbd0nyjqQqj1ity55YfWayWpeUasHuMKJ4ZUHlJGbMmkizVoUsQackwYb8khYrwrk9JI
      ObwYg+Zcvh8YOaaFxl2uE8mDxIoRejw0I97O46/Q91nOIWIaT+5CP/nTzv00BuMtsqQHuCu1
      A1jv0JyxtSd1gZy0hFb7BhS5D8AXOoaWRnBdIJ/DynUZoSmXFd8ZNCuYvlTRW/K0Rbwjd/3Z
      SFLpHJMTOdAreZRAxiwNc36SA3IY4i16CmWEK2UAfYVd36ChtNExrmzbWIt1lhzTNsc9p3Rh
      k99xDavDcGRitEziMCVrznns/MCfS0xWu3JPtMt7InPa7ZrYCjovQ9014VWVO/fuDnJt1lo2
      +riYXWtAM6qCxnzig/GVMgDQsnL1X42b1wVYNGdSKDvA3AA0C8aaizGCTtFuGD+h08R0IEXn
      qoLxJUg/aspojGXX2cVgPQ7LZQBihifD7Trm5H5r1F7TJ/UrWTq0YF4Pvo+nbvS2wnkjz4rB
      azzdYrVUBmC6UekwMSTkFMvBCZFRZtWwVfFr3X2UBJF5WvhUK9qeIYzFGQh9Ty5rLUpx7VYo
      WCoDIOfhVMPmMHMSwLBIg7NWiwFI5SEnEIOpHKkNRSDS++0tXnNGTB+KdJbchgNpEb6qIEXq
      xhU3Tkq7UWsEMY4cA/GKG8NyGcAKIJRIiweNqbC5Lf3O2G8FWppUYxyaSxxeD5BqzDmRY8L1
      rFFlzh4Vck5YZ483ABHaa8OVjJaul4MNtzCW0gBy3okuqCrGmF09ixVrliN9oVoO0zLnKSPE
      LuIq1xffS/m9lNett9vyvmKE0EaqZq/ro10sRhBir3ZaNL3E5hJfz31SSYEU+2TUwW5jDAFU
      ibEwcwtDd66yZkgn9JfbAVV5/OBnvMWwlAZwr21JOWONwRiDoEQFi6IYNpr6QV9iQUp0bS56
      1T2tUlNGBGZbAVdbNIGxQoqpJEYR4rTDeI8clB3aU5G383vt/fj7J/uRNIB5OHd7d+ijW6q9
      QVx+mKYuC8IZsd8AzuHQeCLsysR6a7HGYEVIqnhr6dqOuqqYhHAshfcikbPinCnRB1PCpgrY
      yuIqi6a+c7CW1+d+O31nyRUWQ0ZK9PCM2F8Ub+7xQJw0MUgoK/vogMLqeaf6xp++gMPXvo//
      D4T5JYhQjSqc2z+Tfb37vTuM1qXccq8wDiiKj+dQl3sCqGHegX1oDF1HNjclsXY1oU8JEdhY
      H6YKTcSy6PFk9fxWuFCIKCM/jPoFYunaxYS3DjWAEDPW7Ohnml3EI1UlZYgxg5Q+uLKrXjdn
      3fP+lfbm8TBW0ANcqbOgqTx+IKlHcY6HWa/iUAPoukIKK4XZQjZSGqJrCeRlEWJIOGdoUyQh
      eCt0IWN7tqDpeeBr46tdeH0itFNkNszK6PwG9UB9BLIqmw/xAnb48VlKAbP3hqYq/4UEISp1
      ZTDWFDalEZrK4ivHdJYYVYU8ZowQQhy0EGuFFYbGoTvA2mj/ql2t70QzxgDVzqG1ShltHL6y
      bIsBNw/nEUMQKhl6V7sv8GDMwrwozZlZSoz6yNnexnsrwICHYGMNo0Xr1+eVRkPiHB64JbOR
      p4OOmSldUsrqkRFjy4Td7hDZN4k1gp7QVdqaTVHnaWMEVTZnMzaaGrEeTZGQUsmxpMSoqnEH
      FZgw7Blu2ZSdlmqJnsgmKsOyLEUclscGHfM8IUbQNkJtkaqC0CHGgLNIF06Vz3DW4bxj1kVU
      M433OIE2Z1JKGBFCjNBTTA5NL24N2A+t8ucV7T4TlsoANAdyHjYJJ2TOXYtJlQy9/OBibobG
      BM6hMfYuUN+BJadtOsRJ4ZzDIBgUsRZDoWLkGKmcw4pgBCYhHiqRWChHw+WF8sDKZmJAF/AU
      l8oAToblaRpdSHuC5kzuSW4hZCpv9pBJXB8wOBF218vuYmqeJZbgem3+cb13ya3c3se+voCG
      04NG223u4jqdHktoAEoXeoZlLs7vfHFq24zxQo6Kc0VB7kFCBDY3O0aNpYsZ03N87t7rqHpB
      LyNgrSyd73sWOF+RYkBEMKYU14gmUt4pI71o5BgfNgOAlBSj8xrsUhEllGRR5YU2ny5AYizo
      gLocc+6ViKGuLd5bxCqhl3FcGwkZwYqS9OGY/PNCGjUG6xyaIykbxnXN1uQUAQEVZKDi/xLF
      X+x8spQGMM8iSx/+ECBmpfJCCFp0Q0/hFNj2j8M2yta1bUJc0/fv9Vbwo+Xiug8L7Q/KkFLC
      GoeRxKztsMaQTrEiyf5edWfDrtttrAPythiEGFtUIihCwq6qiCFCLp1t5l1Cl9AAhLrav2Lu
      Dxw8DKvq5ULYpTSRlkobVXBVjeaIqkFz6WZpjCPnTOxapC+qmr83x7CsBnB+uD9Cs+O3ygPn
      5oeRJ7ph3LTaOWSoFPwplL3PgnkgYbFGHaUjpeaEkpB+a9CcUdW+UZ8ACc0R8X5bLPlKGcC9
      WcZ7gxMIWcm5uC7WKG1QvC2a/ClDl0ojillQRlWvx3+O2JSOmRnGN3gk1shAhEt7TjQuVWWr
      bcvEF0vqIpXzhBRw1hFipDkkOXcQYnf/B74vnzSPqImQws5Ots8AZmlEzhdPXiue/vkW4lgj
      pKTMUqnGskaISWlj3+JTYaZQ/N3y8/z1K95JaHDknLDW4SQzDYEESIqkrL0R2BNP/lNBdY8s
      zD4DuDOFNlz80zYiPHbO/aqVcqiunZCBvlE8DqFL0Hhh2ikjb5gGpbJCFx8uNt+8UP9BwxiL
      pg4Vy7h2tCHgnYMYqa3FDtwu9zBcKRdo7YiET99CmI2mGP9Gz6evDuDoZxVms4F3yb43s7MV
      ohkxDjQBdrsuo8uRyjhiTlgjtPHoHVOswVi7veJZKyhC6k5xgBXhkfXrZ/1U+2CtFOq3CONd
      ZErXJ+uqC26svZABmG0OydWCqtINxN3fHrNvVmdFaFOiNgbEoprJWgygtjWqude5SgsAABR/
      SURBVOcMmmMF44wxpJRLXy7VXrP/9BNMhhTrWzJX8lADqLzFCISkeGsIKeOtIfZfQ0zYXgGB
      rHQDCMgat1Y6kw8IIxa6e4OOeZ6IOeGNLXUUGnaR1JSQE5Utob0iFnM0clZ87Uht1zfb035X
      eXiwsTFaiAx05A6QFRpvSVmprWEaMqPa0raljamIUDlDF9JOo9sF0NlHyQO7fkagvkQGkHI8
      8la2PSHuJJ03NSXiLO/1+RfcsVWVrH0H0PvdFVViziVgIPZCAgdWw/kYgDWGlBLTLuKtYRZz
      mewxU3vLLJRsWs7lhqywnBjqwKua2dy6x6gZE2PHLARqX1FXnhAzIcywztN2XZG1EUNKEWst
      IZYQZ13VKDAdKKQsIiwaNznUAKbtThy17clGbS8vvn2EUiUtQERa4XLBWktIERGDd66wX2Mg
      xoRiisvlfJkXmnG2HNhr3yD9PFHgznSYYiJrLc16MaZp75X4U3Lfr0YUqFkvissDQaSCgR7i
      5UFpnm6tA7ScQ6RwgKqmJuWENZasuZAERYgpMt6ujz2/sKaqMpkF1kawudUyqh0hKc7ArEtc
      W28OzSlcDQMwedBQhl5Bl09EyupefsL0K60x933dNdF33l/+zXleW105cp/gbGOm9o4QAt7Z
      I//y1TCAS4DGVYNVrvkBH6txdpAAx3ljXHtAcd7i+mhlPaqJKR95GL9SBhBTxu2aZdrTrefS
      6w8S6yYiMgzDMpEHy8+IFXJafpp3odALVX+plSsRquqYvMeVMoDJJGCdxdmS30hdwjeO6TSy
      sebpQsY7Q4iZtZFbirLLFc4XV8oAnLdoViazshM4b2kqS05KDImsZZfw3j5Uk39O+54Xgcy/
      nyMftwMOKYuyZLf1ShmAQcEZ1r0hJO2TeBlnpTSQC4nK22O56YKUiqNBMfzMyDkxawPeCkk8
      mloqXzGZTqmbBnJCxZBiZDw6OKIuKI0bLpGYBhcUWwz7DMAagzUXH+UwF5A2bHa1I5q3Gdh9
      A/wJJTuyGLbM+oBXBtcYllsE0Hah1DREJeeWelQzazucKxESQeli2PaXD8Wg9IlhzxPZVgt1
      u9lnABUdohffIEPU0AsuLj20d5WWHdYYJm2L8zXeGbpZi/eeGDqMdWhOOGv7iqnLiY/oyAuE
      uPcZQErpRDyToSE5s1yb4+WHNQbrKpqqQgQqXx537U/v+RZJ/IwxZlv+XvsexvNWxkZg2iWa
      ymGkZH3vP1uICNUBHYDOAmPNwrXJS3UGcMLg9GpzzvxbYwofSqQIY+2++nmfa+8tOaZSjneB
      xSjWOcZuqEes3N3qGDeOkOgVFwpZsguJaZfwfZDB9IVH1jmq+zcXVQgDZdGzhVH5fNrXFu/p
      Y9HrSh118D707nhfEWPCuSJzLmIoPdJL8aK1ljigZB6Abm6dutX9ccjGwLVBh9yDUd9/rGSH
      BessopmYKeV3c2VbY6hrT+g62ktZZSZ4Z4hJS2NAW2oNVEGMofLQVI62DXjv2Jx0XK8vZk9X
      VSa3p1RrNTErvraENmFsERNOIeNqR2wDxlmcP0HPNmMtkorQUyUeMQ4jpTPMfKWrrKFrl6jr
      8QVj3gCk1AyXhSGlIjyrPYffSL8qqZSOOseWsSwnRISN8cGqtrtfrb0lpcSo8RdW+yIiuMZj
      BLoQSTFTjStSGxAjWGdoJx2+8aQunswAcs6ISBFGFYOluCe7C4plSRpWHwtTDRvJ0B1C2KQt
      O1btHaqZ7qAdLMz/9iXgFAwAay0nOVdbX/XCf7nMq7nkYk7bsiUn/5ulOMtYg3G2rPa2b91l
      BFeV19C9Znl4j7A9MhO5qGpdEMT01epzH65XADa2VEHlmLDOkmLGuNIp/Ujee+4GNgDL7tan
      AO2i90fMvjHPPNRcS3KQwc5nHZ/XPKuWumVRxboKMUJOQu5O51m4XqHPVQdPaTGCxoy9r2nL
      Uh2C5zDOFiWvflVQBeuUrAI54+oKVLFe0JRLNOCS1yXkTYV2INdopBAGOktVhvMIz2lOiKuQ
      lMgpYp0n54io3eNlDAURoRrvjz4tpQGoQu4ixvTauEbIScvJQ5UcImJLLzKyLuhR940Az72J
      wDGICQYKKmjKpQB+iLEWbNN0xMh7xKx2Jv2wDVKOw1IaQO7dicOeoaJ7f3kSGUBV7k0C3lva
      NmKcIYbMeOyIUZlMQpERQUla8pViDWsPaZ+z0yANKA+nslz3c7mu5pyhfROLTOkx4F1p6yp9
      rB4gJsUAzhlmXUab/e60NfBYM3D2tD2nmMmuPgvbzcb6OL1YCykdeX5S4NaAbauG9qaM2IWC
      alfHAEQYN0UkdW1kthNY1sqeG1hjtjObzh2cRjOqbORht+rIoq7cfoh3fSKo13d0DjGQu4Sp
      HRrSpVdJGXdrCyldXB0DoITKAOZFctuszz2zXM6xevXiIcZATuSQEDEl0SilkXkRyjKnqpee
      FxGddb8akgohtmSeVwawwoHQlEsAoZdC1G6+ayVOy3fUlJhsdiWJZIrEYTfLjDbq00VKNTPW
      26f744chezq7ttAQKwN4mJEzuR0miiPG4HqSm60MoU24yi5FgYuqcm+ySVWNsEYwxvSnvV6F
      ulerMGL2FTrtM4DxeEyuL76Rq4iQZ5fcIX3oUXTiwyziak9s4865etGRVQ9kj+7G0ZVrgmhm
      c2tC5evttk3GWEJuCQrro/E+122fAajmByL7oZR0tdphl5RLQ9dYdohQzxNJ/fpo3dl9eVVl
      1vd762JpRtKmwiQtgYmiiRqS0vjynqhQmR2J+51LE5zzqGa8czjvmc1mrDU1sxBwxlAZf6Dx
      LJUL1LgZmIEpF2IolQbDGYJIaYe6wtmRMyBCjKX54azL21yeLpa2qyNfInWbbenZYJP2CW7d
      YwAAo7qUdM59l3q9BFzXjzHSExtATGm/GOplweTOoF0i1W+wuCrl1YYxkKLiLcw6pXaFzBaS
      Yg3bDTJEoLJCiIq1Rd9syHPHgQagqrQ9GWlO9805UlVNIckZy/p4NNxVHAUt7Youomb4QcJe
      u46uD+N6RoVshslTGH8+i56IsF6XZ1rvmoX3r+zr80X3nEoLDjQA6bOGimyHWJ1zpSuJ6rl3
      8Wi7gGKwhm19/NgWBmhOico7QkyIMYiWzO5oX+nRIVAls9Pc40ELYu3GUA21c0rEMExAwQow
      bMuGpcKhLlBdV6WoQ0sDuZI5zayPx+i5ThrtG9cVOY+1xjPpSksgcsJYx6wNZfKn0gZzFvOJ
      DKANGQGmUWl832FFMwmojNCl4msukU0sAYRKNgYbbdnqvg81gHkLnt2z4SLVA5w11N6WLt9G
      aLtIUzu6UAhtc5JCiOlkktiqxAxjLwSFlHV7d5t3wmmjUjnFHWMB2cC9gSPF6/oAugf1PCEz
      Z9YegpyH+7BZhg11W79Yz4+ligIVCGujvXtuUzma6mBFg+qkPmpfY9Pl0g+4MKt3GmenXOS0
      T7L6K0o7cEvXdRbLaB4E4yzGWlTTvEATY4XYlSSWKmiMYEzfiK8UG50vBMxA0844cu5WVIiT
      QRhX989uOeT7hwTzc07fGdI25QxlbLF0jYUJKj0f8Ejj1xKa3J1XUS1loafxDBRhKz5+9s+0
      C8YanFsscHCFDODqQXPGVY44CygQZ10pDdREjtJPfiGHiPGOfERBTs6Jrc27NOM1Ugw4XxG6
      FrGOMEtY50phkdsJX3Ztx2h9Y+/SosMV2eRdA4cQEGNPXdi0MoAFoKrMNmfYypHa1HNkIq5y
      aFZs5YizDlt5qgdQWKMpE6Z7XbU5938ukjv/mo+paTbG4KuG1LWoGELbUY9GdO0U4xqEgKtH
      pHYCqriqwlfNheyrhQs0ZdQ0tF2m8o6uC3jvCTEybupDxY5XPIEFoDGVZnAxYSsHWbG+EMSq
      kSsNqcWQBtY6ejAo8i6+GSHGUI9GhK7D12PQAMZjjZTuocaSc6n1vYh8eekQU5FSRFUJIZJz
      ou0Czvsjlb5XO8ACEGep+uKastRZcirygQjUaxU56cORxBOhakry0/atj+pR0XK1dkfT1VTN
      A5lUlfcYA7MuUjlLkGKM9hgu2H5x3C6i4WILkwEwgq57hpIG2YYYYHPYMedDi2Dvy1za+5SW
      7//9CucD19/3cV+q6k4oCbn/XW1b/rtoGEMYVWgeeMIIuPpRdEDZFHUemA023goPDlfCBYrq
      GPK4o+dxdDJl5EGGcgZbD/NozWDiusuJxT6dMT2vdVgcxdFZNv7OUJB8D0nDuJ4qY9QO1CH+
      ATRLuUgcbgBVjfG2FFE723eFCFDVECIYRdNcKzqDWMQJeWtx6evJdIpzHmeEkDLeWVLKGFEm
      bWStqbZfzzlT+YtlmAiC06H/5rIatSJmuBZJghs0MiTGHC2LeQwO5wI528sSZiT2k91biCXU
      RNuCLxwRjRmp/WBEbWssmhJtKlzwyaxjPKrpukDlLdNZW7T2U2LUnJSXr0xnLdZYuhix1qG5
      hCnHzem4Ljkp7d2Bz0nXL74M9aQIOtx5R6gwA3HKjDXcmEI6iTDaITjUAHQ625YinA+vkaIK
      NSdOtW35nTHobLadVFkciorgjdClTFOVGLOg5Fw6nSSltPc5aYhRFVXBOyHhQdNSlkuGEIla
      6lsxBkuhb5euLAZnihBeiAnvLJuTjkc3mkvjFmbg7kDTxGkvR38eOwCH1QUfxBoc+Bywe1Wv
      Dnn91BCDs0JIUDmzTyZ7YcyV1xZEGzNrjWNrBuREUGW9cWxGMDkhBmZZGNeeWRe3GbOXCUN1
      yRFZfJyH+4h/H4YSZNqGsTSVo+u60kFHBCNlS7ZWEFPcrJQL8zjG2PfYOnzBcEaYhVxEPYyh
      MoKI0PjC3ZmFVJrfzTpGtadtw0MbGDgNxk1FCIHcU92tNVgpFPh5q6R5wxJEkJyJesUM4DwQ
      Q9jOjM7VR52DpIrTTAgRX/fnl7omhaNp1M0hbYUKG9xQV74EBHrD8Id0bbkMmDfaM6b0TjOm
      NPKuvaMNkXnXNaF0eYkhHX6AVsU6R2NLJ56YFWsMdWWIsdyvNiRGdeEHRQVWBrAgVDHek2IA
      BGMd1hq6ELFGCDHhvCtddrTvuDPA9m8ftJT7ABARKmvIVkBLRK9U6JVV2lqLF0XFFqo2HNkP
      Mva163PhcGsKFTylTIgZMUVmP/Z9zbZLfc/9kz7M0Ey3O2suhi6FcjDrX9r2dkSIx6z+VwlK
      37UlKc4Ykiq5l3Kk77DWxYzzpriVxywcXV8DPTeSfRmVPH99LyNgZQADouwEh0B1oXDdQwdV
      pm2ZrnvuWlbCLvZs6s63Ndc+A9gcrRP8BUme7IIR4RFjYeCaURFzLi13Vng4sM8AZjHTDtVf
      6hQwIlyrdfCWPCqZLQmkAYXw/XloG0iv+jTEUL1czDBjPdzRpSvhAk3jjDSkMtw5nEGzSchA
      /bGmsebudBgDaCrBjoajqJeGu8vjCh5qAM5ZyCWcdOwgfVRCUELSbdGpw94bF2ng1ndfNw8w
      i+us5dr1RwYdU9hk+6S2IHLWwZJNOcPjaThdoCTCRyzOF5tjbe3wuXYSHGoAjbeEJHj6xIIR
      utjHUUPsVdqKUKPt+/p2IbHWmBIFUWgqW0JQ8zF6OZK6KuJWhz2kruuKqG1OWOtKaZ0IXdvR
      NDUgaAioGJzZVYQdIk1dHVkCNxQGIltuY3nWxAMw4MWJwLWNYVxIYwxJNnuyyNlweKPsmMi6
      I5chpsRmNWesNcRYevhaSux2Hm+F0ojAGCHETEaJXcJXvvj3UmKx/rDevlqU4eoKUjZ0IdBH
      xnDeUTnLpA2FO6mZLiUM0OWMofBkLnMRVs7KZBYZN73KgpVtlsVpSyttn2CyRnDW0IaEM9In
      iYryshjB97+7KMSB5PdNVmRB7+xQA5jfkHkzOUIRV4r3uTfSl8POF/MiLnDfv6XofRqRbTGq
      Q7ctKWUGMSuaC2vT9iu6aqaNCWvtdklKyokYM03lCFG5yDOb5khQQ2XNtnq25kRSKWLCvqde
      5EiXTeEgHYPprBSSh5i4txWo6qLJ6rw9tUSnswZjwfX33VpDU3tCSAgZtbbwaU7UZbYnRaqS
      c0KMZTqbMmpGOzt1LvXQl4mWcewhOO9yUxT2MT71iPuX73Nx5pP+aNao0Mw71JyA5+9x26Lw
      1QULT6pmtqYzOucwKJNpwBphlg2VKNO2pfaeEDuMG7E1uYt3HusqNCfGh5D7UlZST9qrKsdk
      0jGqT7/UKYW6bSpT2r/2mVDQQg+wxX3NJ7KAzLTtUE0oFgjknIlhxuaso/aerHBtPD52qGXC
      lYgCnSectT1lXHGuYuQtqS1UCG8KXddZS0gBMYXGnbsJTXPwwXJtvNeKU8qMR+5M55p5dnRr
      tuNy7MmExsRJ80xiDDkF6tGY2WxWaB9kFIN3vi9K2t+D6zBoTrTTFmv7VkYiiPNoiuQYMdaS
      kuK8oZu11Gvr24XvQ2JlAAtAjC+dS+wOX0WAcW36Rm2AL25abUr1mhFhazYr+qQngLWG5ehL
      ImysXwOgWlvf85tT1hMB7Mgs9hE9zZkcQvnZeZy3pMmUFBXnq3Nzq1YGsABKb6pyC3c/nvs7
      6Thb3jOvhNq4ZG7CecBYi6+kL2nMO197ujJAPR6XnSfnc0vIrQxghQcE2V4Q5L6v2+/ofz5P
      Wf7Lz6tdYYUFsG8HWPf2gbR/EyOEnPdFjhaFEWFkK7IZbhWpjFvyzNUKJ8U+AzAhYY9RCj4P
      iAjT0BGPkOg+C4y1jOutogAxEBwCdljGrPAIQ1EhxlZxfpjP65wZ6KoKhi7FtsYhCxAdV2eA
      M0Bh8MxpLXao+Y+mjA60iGVgazKcBIyrPY81A9VmizCb3lxocbtwAzDOkGPGuEKrWETU6LS4
      v3g859KYS5DTSRr1pXdDYh5GvQowQz1zoSTmzmMH8OOaOAtYXxqo5VyoDXMp8FK+Vhijcz5E
      Thlji1KXGNn5OWXEGnJMRRXBgHWGFE6UgxwMs1nGWsEaiCUhWj5rJUNrUi+ELgS825v8CjHi
      rL0Qot9Vwv8PYgeGB3XDxTwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Engagement Bar Chart (Average)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAQAUlEQVR4nO3d63NU533A8e9zzt53tavV/WIBEgIJEGCwcWzAV1yME8d100kzaVy/aKed
      Zqadvsh0Ji8y05n+E03apjNNZ9JOOxk3sRNfYhuwZTAGzMUEIW4SQkLorr1fz3n6AqMb2PEU
      g1g9v88Mb85ztHr2aL/nPGeXkZTWWiOEgZRSylruSQixnCQAYTQJQBhNAhBGkwCE0SQAYTQJ
      4C4ol8s4jrPc0xBfggRwF7iui+u6yz0N8SVIAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYB
      CKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAwmgQgjCYBCKNJAMJoEoAw
      mgQgjOZZ7gncGU25kCOXL1J2Ncry4AuGCPps1M09nBL5XI5CyQHLQyAcJuCZ7167ZYr5HPli
      GRcb/82vVzceQWt37ns4WHj9QYJ+L7albjMfUWkqOABNKX2dsx+9T++pAWbzDp5gDR3bHufx
      R7poDHtRTp6pyyf5oPco/aMJtL+ODbue49mH24l4ALdE6tp5Pv7wQ04NTFCwY6zeuptnd26i
      IexF4VCYGebkoQMcOTtCRgdp6trBkzu3saYujC3Xz4qnKvcvxOQZ+O1/8+ZUM0/v2UVXrZ/M
      eB+9+w8x0/Qc33p6FYyd5u3fnsHu2sXuB9sIzJ7mFz/7gMiLf8EL60I4iSGOvt/LVd8mnny8
      h5riJd75n/eYefAl/uShJqxSiotHXqd3uJWnX9hJm3Wdo28d4HLsQfbu3EhdaP5Ks1CxWEQp
      hdfrvedHRXx5Ff4XYjKMXde09/SwpiaEsmwide1s2LAKd2ycLEXGBkagpZOtG9qIem189dv4
      +r5mLh85TxaHxMQ4STfKxod7aAx58FZ3sWdvB9dPXSTpuhRyM4wMZVn/5E7ao148kTYe3tUF
      U+NMJbNU6JlDLFDBAYRoagsxdXWYiXQBrV3yyQmuXZsl3NpIkAwzszbhYIxIyJ77qsCqDuqu
      DTNJkUymgOvUUlc9vxL0ta6hZfw649qhVJpmNtFIS9P8mdxb30RDJkOqUKB8T5+vuBsq+B4g
      yAMPPszao59y6K1BPLbCdVyCdR1s29JCgBlKlpeAJ4B3QeaWp5qYZ4AiLh5LYXnCBOwFD+uJ
      EvcUKaDRqozrjRFZOG6HqfJqHOWiAa01pVJp0cxc10VrLb8hugJUcAAu+cQUsyU/NQ3VhH0e
      yoU02XyC6USBthigNa7Wi5YqGgfn5i9u1hqt3SVLGXfxuHPruOsuvnRa1uILqdYapdQt28X9
      p3IDKIxw7MgwdudWHtnURtRn4xRmGfj0KH3HT9DQ2INPl0iW85Rc5l6xupQgqUMEPtugnQw5
      B+I3z/KlJDM6QCcKCz9ed5RUGRpvHqlyhpRrUastLEAphcez+DC6ris3wRWick9RxSTjCUW8
      /sbZXymFxx+mujYKs5OkShHqal2SmRmSqfmlSPZiP+OrV9OAn0gkiOWZYHxyfglTGLjIcEsr
      zcrG66slXjvK0HBx/tuOjnA9EiEWCGIjKl3lBhB+gM74CIcPnmAokUdrl+zUICd6jzMWb6cl
      ZNPY2Y5n5Bwfn77ETLFMYbSX//rVJA/uWo8Pi1hjE3GV4fShY1xNlyhOnuTV1wdZt72TkGXh
      D1XTtrqGC2+/Td9MkVLiIgf39+Gva6K2Onjbt0BFZangzwE0bnGGcx+8xVu9nzKSKuGPtbH1
      8b38wc71VPsslHbJjZ9l/2/e5NC5McqRDp79znd5Zl01lgK0pjg7xLEDb/Duscukvc3s2PcS
      z29fTchrodCUc9Oc/+gNfn3gUyZ0nI27nmPf7p4bH7R9TgHyOUBlUEqpCg7g/iUBVIYK/yBM
      iDsnAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMFrl/me4CnX+6hT/+O8Hl3saX2jbumZ+8J3H
      lnsa94QEcI85rksqW/z9Oy6jXKH0+3daIWQJJIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKA
      MJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQij
      SQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMJoEIIwmAQijSQDCaBKAMFrl
      /pG83CgnPj7N4EQKZ9GAn9oHNrDt0U6qSXL52En6BsfJ3Ry2bCKdO9m3pREAJzfDlf4znBsc
      J29X0755Gz1tcby2AsAtZRkfOMPpc8OkdJiW9Zvo6Wihyi/njpWgcgOwA1TXNdLqi84H4OQZ
      HzjP+ZE2tgPkJ7kwME7RF6O5IXLjcmfZBGOBG/sXEwx+epRPLmeItTTRWJ7k9Lv7cfbtY3tL
      GMstMD14gt7DVwisXk2TSnL1+EcUnZ3s6G4hVLlHT3ymcn+Evjjtm+K0z23QFJLXOTExQHBD
      J1UAySTJYC3dW7bTsyqGWvQAmszUCENj09RueobHNtThd5I069d47eQQm5u6sPIphvp/h+p8
      nid3tBJWWUZPHuDtwSE6WmsJxv1LHlNUmpVzHXfLpEd/R19uHQ92hLGATDKBPxQkFArd5oVa
      JDmdoFCup72zjqDHwvJXs2ZHN6H+AcZdh2J+grHRKOu3tlLls7C8EZo3riU+M8t0Jrtk6SUq
      UeVeAZZwSlkGTvXR9PBfUue78XJPp5JcPbSfg2+8isey8Eca2b7v2zy3o5UgJfKlEq4bJRKY
      Pw9YVXXUZc4zgybqpkjn41SHF4yHYlQXc2TLJdx7/izFV22FBKDJjx/h+MRmXlrnn7usNWz9
      Bn+95Xm0BnDIj/fzq5//mJ+lv8+fPx0FrxdfMERg4eVBVRGrUmg0WBZ2OEp40XiISNiD6wEN
      aK3J5XIs5bouhULhlu232/d+Uy6XSafTyz2Ne2JlBOBkOXPwOA17fkCjmn+1KsvCnsvBQ6Rl
      C996eYp/+/FHDD29F6tUopjLkNdQdfPLdJLZFNSjwNW4mSQZDTVz41lSGYdAGRSglCIUCi2a
      TrFYRCmF1+u9ZarB4P0fgMfjIRKJLPc07okVcA+gKYz0cjS1k13rfQu2u7iui7tknaJCYcJo
      wEvA58OykqRy8zs5iQkmq+LEsfBYVUSC00yn5sfdzCyzvgBhj28lHDzjVf7P0ElwpvcSDU9s
      o2HRs8kzNTLE4OAYyXwZV2uc/CxXz1wk09JEFB+xmhh+zySXz4+RKbk4+WkufdxPobuDBsvC
      F6ijsSXNhZNXSBRc3GKS4TMXSdTEqYkEsZfrOYuvTIUvgTSZ4Y/5JL2Bb6xfesl2yU0P039p
      mv5LYQJeC/IJrow6bNqz9cYSp7aVNc3X+OTcIQ5M1hByZrg6GmX3c214LAsrUMWqrs0MHjrM
      gfwgUZVmbLzM2m2rqYnIW6ArQcUH4LjVbNmznibP0pdjhLZN2wlUXeL8wDCzqTLKG2frnqfY
      suqzWLxRVvU8hBU4x4Wrk2Tterbt2Ux3QxBLAbaf+Kqt7MLP2QsjpAnTuWMD3Wsa5EOwFUJp
      feM9EvHV+aKb4L4rE/zwJ+8uw6y+vB3dLfzolSeWexp3nVJKVf49gBB3QAIQRpMAhNEkAGE0
      CUAYTQIQRpMAhNEkAGE0CUAYTQIQRpMAhNEkAGE0CUAYTQIQRpMAhNEkAGE0CUAYTQIQRpMA
      hNEkAGE0CUAYTQIQRpMAhNEkAGE0CUAYTQIQRpMAhNEkAGE0CUAYTQIQRpMAhNEkAGE0CUAY
      TQIQRpMAhNEkAGE0CUAYTQIQRpMAhNEkAGE0CUAYTQIQRpMAhNEkAGE0CUAYzbPcE/h/S/bx
      vz9/naOXJygtGoiwZssz/NHLu2kGCpN9HPjNm3zYd51y1Vr2fvdPeao9Mrd3KTnMJwfe5N2j
      F0l5W3nk6y+xb2srQe+Nc4OTn+Xix2/y6/dOMa5r2PT4PvY9toH6cOUeOjGvcn+KVd28+Fdd
      vDi3QeMWklw89g5H803UoHET53nn9cNk1uzj7769ltDUYX76zz9Fff9veKLZQmevc/L9g5wr
      dvO9v/8zGnNn+MV/vMpbwZf55sY4VjnD8Kl32H82wN6//Qc6rSsc+OX7vHfMy95Hu6j2K9Qy
      HgJx5yp3CaQUlmXN/1OKQnqSK1czbNjSgR+H6xcuUWrt4tFt66kN+gg+8CTf+8M4Rz/sp4Qm
      MXaNaTfIlt1fY3XUT6DxIf74m6s598kFco5LIZtgaGCczr3P01MbIBDv4plnNpCbGGUqkUUv
      9zEQd6xyA1hCO0WmLp1gNPoYmxotIM3UpEU0XEO0yp7bL7Sum4aBQcYpkE7lccsNNNZ758YD
      HetoGx5mVLuUipNMT7eyps0/N+5reYCmVIbZXB7nXj5BcVdU7hJoiXJulLNn02x8YR1BAEoU
      8OLzBPAuyFx5q4kxRA4HDy7KihC0FzyQN0qcHFlcXAqUVJSId8G4J0yVVaaMgwtorXGcxSlo
      rdFaUyotvjsBbtn3fuS6t5/7SrRCAnCZ6u9lpOpRdjYseLV/tjRauE5X2Ng3n7WyULa15DJo
      Y3s++wqlULaNvWjcwrYtFj6o67qL9rgZgNa3LpIcx71l2/3mdlGvVCsjgNwwR4/n6H5xPdG5
      jTZep0iqXKDkMrfYc8sJEiU/PixwNW4pQ86F2M0Kyklmi15WoVDaxiolSTtQf7MCJ0OqCDFt
      oQClFD6fb9F0isUiSim8Xi9L+Xy3brvf2LZFIBBY7mncEyvgHsBluu8Dhmp3sbVxYc9hqqsd
      MrkE6ez8WbcwPMBUcyu1+AiH/Fj2NFOz5bnx4rUhRhuaaFA2Xk8NsegY18bnlwPlyTEmQiGi
      Pv8KOXuYrfIDKF3low+LbN69lsiiZ+Ojsb0Zff0Sn/YPkyo5FCdP89bbI6x+ZD1hbGL19VRZ
      SfqO9zGeK1OavcDBdy5Rt2UtMcvCH4rT2ubnwvtHuJIqUU4P88nhfnRtAzXRkLwFugJU+EnM
      ZeJUL4OtD/NKvX/JmCJQ380j23IcOvI6/7I/g/bGaN/+PE91RFCAN9rCxq09pA8f4T//6U1K
      Vpjmrq+xZ2MDtlIoX4RVPbuYSr7Pa//6EXn81K7Zwq7NHdQEbQlgBVD6dndqFUNTziZI6TDV
      IQ9K3fqSdMsFsuk02UIZbfmIxGKEffOXCu2UyGXTZHJFXOUhGIkSCXiwPnss7ToUc2nSmTxl
      bPyhCJGQH4/1+S//L7oH6LsywQ9/8u5X8Nzvnh3dLfzolSeWexp3nVJKVfgVQOEJVRP/gj0s
      j59ItZ/I54wr20uoKk6o6nPGLRt/OIY/HLvTyYr7UOXfAwhxByQAYTQJQBhNAhBGkwCE0SQA
      YTQJQBhNAhBGkwCE0SQAYTQJQBhNAhBGkwCE0SQAYTQJQBhNAhBGkwCE0SQAYTQJQBhNAhBG
      kwCE0SQAYTQJQBhNAhBGkwCE0SQAYTQJQBhNAhBGkwCE0SQAYTQJQBhNAhBGkwCE0f4Plst2
      iA2edI0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Engagement Bar Chart for Each MIW' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Important Word Group' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Most Important Word Group Filtered' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tweet Content' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
