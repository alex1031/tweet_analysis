<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='tweets_wmost_important_word' inline='true' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tweets_wmost_important_word' name='textscan.1fgaec50kblvxt13vnvyp07823aj'>
            <connection class='textscan' directory='C:/Users/Adrian D02/Desktop/COMP4448/assignment_2/tweet_analysis/data' filename='tweets_wmost_important_word.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1fgaec50kblvxt13vnvyp07823aj' name='tweets_wmost_important_word.csv' table='[tweets_wmost_important_word#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_HK' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='handle' ordinal='1' />
            <column datatype='string' name='text' ordinal='2' />
            <column datatype='boolean' name='is_retweet' ordinal='3' />
            <column datatype='string' name='original_author' ordinal='4' />
            <column datatype='datetime' name='time' ordinal='5' />
            <column datatype='string' name='in_reply_to_screen_name' ordinal='6' />
            <column datatype='real' name='in_reply_to_status_id' ordinal='7' />
            <column datatype='real' name='in_reply_to_user_id' ordinal='8' />
            <column datatype='boolean' name='is_quote_status' ordinal='9' />
            <column datatype='string' name='lang' ordinal='10' />
            <column datatype='integer' name='retweet_count' ordinal='11' />
            <column datatype='integer' name='favorite_count' ordinal='12' />
            <column datatype='real' name='longitude' ordinal='13' />
            <column datatype='real' name='latitude' ordinal='14' />
            <column datatype='string' name='place_id' ordinal='15' />
            <column datatype='string' name='place_full_name' ordinal='16' />
            <column datatype='string' name='place_name' ordinal='17' />
            <column datatype='string' name='place_type' ordinal='18' />
            <column datatype='string' name='place_country_code' ordinal='19' />
            <column datatype='string' name='place_country' ordinal='20' />
            <column datatype='string' name='place_contained_within' ordinal='21' />
            <column datatype='string' name='place_attributes' ordinal='22' />
            <column datatype='string' name='place_bounding_box' ordinal='23' />
            <column datatype='string' name='source_url' ordinal='24' />
            <column datatype='boolean' name='truncated' ordinal='25' />
            <column datatype='string' name='entities' ordinal='26' />
            <column datatype='string' name='extended_entities' ordinal='27' />
            <column datatype='string' name='most_important_word' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1fgaec50kblvxt13vnvyp07823aj' name='tweets_wmost_important_word.csv' table='[tweets_wmost_important_word#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_HK' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='handle' ordinal='1' />
            <column datatype='string' name='text' ordinal='2' />
            <column datatype='boolean' name='is_retweet' ordinal='3' />
            <column datatype='string' name='original_author' ordinal='4' />
            <column datatype='datetime' name='time' ordinal='5' />
            <column datatype='string' name='in_reply_to_screen_name' ordinal='6' />
            <column datatype='real' name='in_reply_to_status_id' ordinal='7' />
            <column datatype='real' name='in_reply_to_user_id' ordinal='8' />
            <column datatype='boolean' name='is_quote_status' ordinal='9' />
            <column datatype='string' name='lang' ordinal='10' />
            <column datatype='integer' name='retweet_count' ordinal='11' />
            <column datatype='integer' name='favorite_count' ordinal='12' />
            <column datatype='real' name='longitude' ordinal='13' />
            <column datatype='real' name='latitude' ordinal='14' />
            <column datatype='string' name='place_id' ordinal='15' />
            <column datatype='string' name='place_full_name' ordinal='16' />
            <column datatype='string' name='place_name' ordinal='17' />
            <column datatype='string' name='place_type' ordinal='18' />
            <column datatype='string' name='place_country_code' ordinal='19' />
            <column datatype='string' name='place_country' ordinal='20' />
            <column datatype='string' name='place_contained_within' ordinal='21' />
            <column datatype='string' name='place_attributes' ordinal='22' />
            <column datatype='string' name='place_bounding_box' ordinal='23' />
            <column datatype='string' name='source_url' ordinal='24' />
            <column datatype='boolean' name='truncated' ordinal='25' />
            <column datatype='string' name='entities' ordinal='26' />
            <column datatype='string' name='extended_entities' ordinal='27' />
            <column datatype='string' name='most_important_word' ordinal='28' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;HK$&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_HK&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[handle]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>handle</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[text]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_retweet</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_retweet]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>is_retweet</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>original_author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[original_author]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>original_author</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_reply_to_screen_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[in_reply_to_screen_name]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>in_reply_to_screen_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_reply_to_status_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[in_reply_to_status_id]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>in_reply_to_status_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_reply_to_user_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[in_reply_to_user_id]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>in_reply_to_user_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_quote_status</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_quote_status]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>is_quote_status</remote-alias>
            <ordinal>9</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lang</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lang]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>lang</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retweet_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[retweet_count]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>retweet_count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>favorite_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[favorite_count]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>favorite_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_id]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_full_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_full_name]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_full_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_name]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_type]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_type</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_country_code]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_country_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_country]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_country</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_contained_within</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_contained_within]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_contained_within</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_attributes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_attributes]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_attributes</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_bounding_box</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place_bounding_box]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>place_bounding_box</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_url]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>source_url</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>truncated</remote-name>
            <remote-type>11</remote-type>
            <local-name>[truncated]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>truncated</remote-alias>
            <ordinal>25</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[entities]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>entities</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extended_entities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extended_entities]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>extended_entities</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>most_important_word</remote-name>
            <remote-type>129</remote-type>
            <local-name>[most_important_word]</local-name>
            <parent-name>[tweets_wmost_important_word.csv]</parent-name>
            <remote-alias>most_important_word</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='tweets_wmost_important_word.csv' datatype='table' name='[__tableau_internal_object_id__].[tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D]' role='measure' type='quantitative' />
      <column caption='Entities' datatype='string' name='[entities]' role='dimension' type='nominal' />
      <column caption='Extended Entities' datatype='string' name='[extended_entities]' role='dimension' type='nominal' />
      <column caption='Favorite Count' datatype='integer' name='[favorite_count]' role='measure' type='quantitative' />
      <column caption='Handle' datatype='string' name='[handle]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='In Reply To Screen Name' datatype='string' name='[in_reply_to_screen_name]' role='dimension' type='nominal' />
      <column caption='In Reply To Status Id' datatype='real' name='[in_reply_to_status_id]' role='dimension' type='ordinal' />
      <column caption='In Reply To User Id' datatype='real' name='[in_reply_to_user_id]' role='dimension' type='ordinal' />
      <column caption='Is Quote Status' datatype='boolean' name='[is_quote_status]' role='dimension' type='nominal' />
      <column caption='Is Retweet' datatype='boolean' name='[is_retweet]' role='dimension' type='nominal' />
      <column caption='Lang' datatype='string' name='[lang]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
      <column caption='Original Author' datatype='string' name='[original_author]' role='dimension' type='nominal' />
      <column caption='Place Attributes' datatype='string' name='[place_attributes]' role='dimension' type='nominal' />
      <column caption='Place Bounding Box' datatype='string' name='[place_bounding_box]' role='dimension' type='nominal' />
      <column caption='Place Contained Within' datatype='string' name='[place_contained_within]' role='dimension' type='nominal' />
      <column caption='Place Country' datatype='string' name='[place_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Place Country Code' datatype='string' name='[place_country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Place Full Name' datatype='string' name='[place_full_name]' role='dimension' type='nominal' />
      <column caption='Place Id' datatype='string' name='[place_id]' role='dimension' type='nominal' />
      <column caption='Place Name' datatype='string' name='[place_name]' role='dimension' type='nominal' />
      <column caption='Place Type' datatype='string' name='[place_type]' role='dimension' type='nominal' />
      <column caption='Retweet Count' datatype='integer' name='[retweet_count]' role='measure' type='quantitative' />
      <column caption='Source Url' datatype='string' name='[source_url]' role='dimension' type='nominal' />
      <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Truncated' datatype='boolean' name='[truncated]' role='dimension' type='nominal' />
      <column-instance column='[handle]' derivation='None' name='[none:handle:nk]' pivot='key' type='nominal' />
      <column-instance column='[most_important_word]' derivation='None' name='[none:most_important_word:nk]' pivot='key' type='nominal' />
      <group caption='Action (Handle,Most Important Word)' hidden='true' name='[Action (Handle,Most Important Word)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[handle]' />
          <groupfilter function='level-members' level='[most_important_word]' />
        </groupfilter>
      </group>
      <group caption='Action (Most Important Word)' hidden='true' name='[Action (Most Important Word)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[most_important_word]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:most_important_word:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;account&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;amazing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;attack&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;biased&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;brought&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;caucus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;city&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;committed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;courage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;days&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;democrats&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;doesnt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;elect&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;equality&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;failed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;fix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;fund&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;gopdebate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;hands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;helping&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;hope&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;including&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;joe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;know&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;left&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;living&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;maga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;meet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;million&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;native&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;november&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;plans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;power&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;proud&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ready&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;reporter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;romney&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;schools&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;shouldnt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;speaking&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;stay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;sure&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;terrorist&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;tickets&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;treated&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;tweet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;violence&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;war&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;wife&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;worse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;zika&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;agenda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;apart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;beautiful&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;borders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;campaign&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;child&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;college&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;control&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;crowd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;defend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;discrimination&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;easier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;endorsement&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;expand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;federal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;foxandfriends&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;goes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;grow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;hear&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;historic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;isis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;kansas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;leaders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;lightweight&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;lot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;miami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;movement&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;nh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;old&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;people&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;polls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;problem&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;radical&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;refuses&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;rich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;saturday&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;serve&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;smart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;stands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;super&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ted&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;thinking&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;took&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;truth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;using&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;vs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;week&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;wont&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;york&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;able&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;air&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;article&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;bernie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;breaking&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;care&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;choice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;comes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;corybooker&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;dangerous&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;demconvention&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;divided&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;economy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;enforcement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;facebook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;finally&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;freedom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;guy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;held&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;immigration&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;jeb&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;killing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;learn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;listen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;loves&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;matter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;middleclass&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;nafta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ninety&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;oreillyfactor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;post&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;progress&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rally&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;released&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;rights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;saying&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;seventy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;solve&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;state&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;supporters&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;temperament&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;thoughts&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;town&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;tune&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;vice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;wall&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;weve&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;workers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;young&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;american&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;bad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;bigotry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;bush&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;champion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cleveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;companies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;create&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;deals&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;deserves&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;donaldjtrumpjr&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;elizabethforma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;especially&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;false&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;folks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;game&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;graham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;happy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;high&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;house&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;instead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;join&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;las&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;letter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;look&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;makeamericagreatagain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;members&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;mitt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;nearly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ny&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;party&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;police&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;pres&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;putin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;reality&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;respect&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;run&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;secretary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;spend&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;street&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;taking&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;thank&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;times&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;true&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;unfit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;voice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;watch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;wins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;wow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;act&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;amendment&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;attacked&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;biden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;build&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;celebrate&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;class&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;common&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;course&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dc&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dems&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dog&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;elected&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;eric&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;failing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;fl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;funding&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;got&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;happen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;heres&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;horrible&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;increase&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;joebiden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;known&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;legal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;lobby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;major&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;meeting&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;millionaires&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;nato&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;nra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;packed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;play&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;powerful&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;proven&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;real&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;reporting&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;room&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;seanhannity&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;showed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;speaks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;stop&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;systemic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;terrorists&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ties&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;tremendous&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;twitter&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;virginia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;washington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;win&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;worst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;absolutely&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;allies&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ask&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;berniesanders&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;breaks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;career&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;chris&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;coming&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;cost&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;daughter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;democracy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;divides&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;education&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;enjoy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;facing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;financial&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;friend&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;good&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;hell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;home&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;important&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;jebbush&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;kind&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;leave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;literally&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;low&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;mayor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;mike&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;nasty&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;nomination&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;orlando&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;piece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;potential&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;progressive&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;rate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;remember&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;risk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;says&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;shes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;soon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;statement&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;supporting&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;terrible&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;thousand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tpp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;turn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;victims&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;want&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;whats&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;working&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;youre&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;african&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;answer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;based&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;book&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;calls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;check&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;clue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;connecticut&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;crooked&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;decisions&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;disabilities&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;dumb&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;endorse&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;exactly&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fbi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;foundation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;giving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;group&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;heading&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;hillaryclintons&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;idea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;justice&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;lead&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;life&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;loss&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;marco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;mexican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;morningjoe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;new&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;officers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pence&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;politics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;prevent&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;racism&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;reform&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;review&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;said&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sense&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sixteen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;stand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;su&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;taxes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;things&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;tonight&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;trumptrain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;use&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;votetrump&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;weapons&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;wonder&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;yes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2nd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;appreciate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;believe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;born&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;children&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;color&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;convention&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;crowds&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;del&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;discuss&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;easily&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;endorses&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;expected&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;feel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;foxnews&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;going&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;growth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;heard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;history&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;illegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;isnt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;kentucky&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;leadership&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;like&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;louisiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;mass&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;michael&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;mr&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;nice&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;open&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;person&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;poor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;problems&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;raise&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;register&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;rico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;save&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;service&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sobre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;star&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;supertuesday&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;tedcruz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;thinks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;totally&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;try&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;values&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;wage&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;weeks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;word&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;yorkers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;affordable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;angry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;barack&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;black&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;california&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;charge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;close&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;congratulations&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;criminal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;debt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;didnt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;dream&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;en&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;event&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;far&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;forget&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;girl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;greatly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hateful&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hillary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;husband&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;interviewed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;judgment&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;law&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lied&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;lose&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;manufacturing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;message&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;months&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;network&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;obamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;politician&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;press&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;questions&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;reckless&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;results&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;safe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;senate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;single&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;spoke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;student&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;tampa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;theyre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;told&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;trumppence16&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;unlike&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;voters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ways&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;women&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;wsj&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;accept&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;allow&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;asked&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;best&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;brexit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;case&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;citizen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;commanderinchief&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;countries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;david&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;democrat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;divisive&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;eighty&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;entire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;fact&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;fired&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;friends&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;goofy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;hall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;help&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;honor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;imwithher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;job&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;king&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;leaving&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;live&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;lyin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;means&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;mikepence&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;nation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;nominee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;oval&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;plan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;potus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;protect&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ratings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;repeal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rnc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;sc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;short&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;south&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;statements&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;supports&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;terror&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;thousands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;trade&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;turned&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;victory&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;wanted&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;white&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;works&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;youve&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;add&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;americans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;badly&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;billclinton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;business&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;chance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;climate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;company&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;created&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;debate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;desperate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;donaldtrump&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;email&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;establishment&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;families&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;follow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;gave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;grateful&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;hard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;higher&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;housing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;interesting&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;joke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;latest&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lgbt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;looking&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;makes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;men&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;mom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;need&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;nytimes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;pass&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;policies&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;presidency&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;qualified&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;really&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;respected&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;running&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;security&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;sign&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;spending&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;strength&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;talk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;thanks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;timkaine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;truly&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;union&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;vote&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;watched&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;wisconsin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;written&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;address&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;americas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ballot&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;billion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;businesses&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;change&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;clinton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;conference&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;credit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;debatenight&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;despite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;dont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;emails&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;et&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;family&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;force&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;gets&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;great&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;harder&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;highest&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;huge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;interests&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;judge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;latino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;liar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;looks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;making&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;mental&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;moment&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;needs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;obama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;past&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;policy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;president&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;que&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;reason&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;response&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;russia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;seen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;signed&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;spent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;strong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;talking&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;thats&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;today&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;trump&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;united&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;voted&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;watching&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;wish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;wrong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;afraid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;announced&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;barriers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;board&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;called&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;charlotte&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;club&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;congress&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;crisis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;decision&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;different&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;drop&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;end&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;everybody&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;favor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;forward&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;given&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;greta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;head&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;hillaryclinton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;iacaucus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;iowa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;june&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;laws&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;lies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;losing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;march&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;met&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;morning&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;nevada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;office&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;paying&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;politicians&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pretty&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;race&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;record&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;returns&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;safety&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;senator&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;situation&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;stage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;students&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;tax&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;thing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;tomorrow&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;trumps&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;usa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;votes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;weak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;womens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;year&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;afternoon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;anymore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;beat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;border&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;came&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;chelseaclinton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;cnn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;continue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;crookedhillary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;defeat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;disaster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;early&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;endorsed&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;exciting&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;fear&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;fox&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;global&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;groups&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;health&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;hillarys&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ideas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;kaine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;leader&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;lift&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;lost&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;mark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;mexico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;mother&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;news&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ohio&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pennsylvania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;poll&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;primary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;racist&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;refugees&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;rhetoric&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;san&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sent&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;small&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;standing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;success&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;team&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;think&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;tonights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;trust&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;used&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;voting&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;wednesday&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;wonderful&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;yesterday&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;action&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;america&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;attacks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;big&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;building&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;clean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;communities&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;court&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dead&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;demsinphilly&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dollars&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;election&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;erictrump&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;fair&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;funny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;gov&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;happened&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;heritage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hotel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;incredible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;joenbc&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;knows&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;let&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;long&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;majority&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;megynkelly&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;mind&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;nbcnewsforum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;para&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;playing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;prayers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;public&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;realdonaldtrump&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;republican&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;rt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;second&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;showing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;special&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;stories&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;taken&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;texas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tim&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tried&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;unbelievable&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;vision&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;wasnt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;winner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;worth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;access&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;allowed&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;atlantic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;better&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;bring&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;casinos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;citizenship&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;comments&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;country&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;day&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;democratic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;dnc&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;el&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;equal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;facts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;fitn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;fun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;gop&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;helped&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;honored&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;imwithyou&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;jobs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;knew&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;led&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;lives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;lying&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;media&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;military&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;national&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;north&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;owner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;planned&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;poverty&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;protecting&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;read&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;report&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;rncincle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;school&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;shot&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;speak&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;states&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;supreme&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;terrorism&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;threat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;trail&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tv&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;video&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;wants&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;whos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;world&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;zero&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;7pm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;agree&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;arent&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;believes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bought&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;candidates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;china&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;colorado&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;correct&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cruz&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;delegates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;disgusting&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;easy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;endorsing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;experience&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fight&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;fraud&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;gold&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;gun&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;heart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;hit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;imagine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;issues&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;kids&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;leading&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;line&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;love&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;massive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;muslim&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;night&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;opportunity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;personal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;por&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;process&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;raised&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;registered&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;rigged&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;saw&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;set&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;social&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;start&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;support&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;television&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;thirteen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;tough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;trying&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;veterans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;wages&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;went&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;words&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;youll&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;afford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;amp&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ban&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;birthday&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;buy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;changing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;clintons&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;congrats&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;crime&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;debates2016&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;destroy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;doubt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;employees&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;evening&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fantastic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;foreign&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;getting&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;greatest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;highly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;hurt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;interview&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;judgement&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;latinos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;los&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;mess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;money&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;negative&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;obamacare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;path&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;political&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;presidential&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;question&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;received&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;rest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sees&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;simple&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;spirit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;stronger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;talks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;theres&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;todays&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;trump2016&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;university&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;voter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;way&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;woman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;wrote&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;actually&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;americafirst&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;away&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;biggest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;built&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;challenges&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;clear&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;community&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;crazy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;deal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;deserve&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;donald&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;elizabeth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;es&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;faith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;flotus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;future&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;governor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;happening&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hours&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;indiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;john&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;la&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;lets&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;longer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;make&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;melania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;miss&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;nc&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;numbers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;parents&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pm&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;prepared&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;pushing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;realdonaldtrumps&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;republicans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;rubio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;secret&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;shows&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;speech&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;story&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;takes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;text&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;time&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;trillion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unfair&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;visit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;waste&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;winning&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;wouldnt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;abc&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ahead&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;arizona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;benefits&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;break&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;card&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;chip&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;come&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;corrupt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;cut&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;demand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;dishonest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;economic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;energy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;face&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;fighting&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;free&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;golf&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;guns&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;hits&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;immigrants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ivankatrump&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;killed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;leads&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;list&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;loved&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;mate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;middle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;muslims&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;nights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;order&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;phony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;possible&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;profit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;rallies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;release&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;right&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;say&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;seven&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;society&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;started&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;supported&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;thirty&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tower&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;tuesday&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;vets&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;wait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;west&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;work&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;youmakeamericagreatagain&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:handle:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;HillaryClinton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;realDonaldTrump&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tweets_wmost_important_word.csv' id='tweets_wmost_important_word.csv_5F5A833EAD114704B95A8400DFF95E2D'>
            <properties context=''>
              <relation connection='textscan.1fgaec50kblvxt13vnvyp07823aj' name='tweets_wmost_important_word.csv' table='[tweets_wmost_important_word#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_HK' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='handle' ordinal='1' />
                  <column datatype='string' name='text' ordinal='2' />
                  <column datatype='boolean' name='is_retweet' ordinal='3' />
                  <column datatype='string' name='original_author' ordinal='4' />
                  <column datatype='datetime' name='time' ordinal='5' />
                  <column datatype='string' name='in_reply_to_screen_name' ordinal='6' />
                  <column datatype='real' name='in_reply_to_status_id' ordinal='7' />
                  <column datatype='real' name='in_reply_to_user_id' ordinal='8' />
                  <column datatype='boolean' name='is_quote_status' ordinal='9' />
                  <column datatype='string' name='lang' ordinal='10' />
                  <column datatype='integer' name='retweet_count' ordinal='11' />
                  <column datatype='integer' name='favorite_count' ordinal='12' />
                  <column datatype='real' name='longitude' ordinal='13' />
                  <column datatype='real' name='latitude' ordinal='14' />
                  <column datatype='string' name='place_id' ordinal='15' />
                  <column datatype='string' name='place_full_name' ordinal='16' />
                  <column datatype='string' name='place_name' ordinal='17' />
                  <column datatype='string' name='place_type' ordinal='18' />
                  <column datatype='string' name='place_country_code' ordinal='19' />
                  <column datatype='string' name='place_country' ordinal='20' />
                  <column datatype='string' name='place_contained_within' ordinal='21' />
                  <column datatype='string' name='place_attributes' ordinal='22' />
                  <column datatype='string' name='place_bounding_box' ordinal='23' />
                  <column datatype='string' name='source_url' ordinal='24' />
                  <column datatype='boolean' name='truncated' ordinal='25' />
                  <column datatype='string' name='entities' ordinal='26' />
                  <column datatype='string' name='extended_entities' ordinal='27' />
                  <column datatype='string' name='most_important_word' ordinal='28' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Most Important Word Group' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Engagement Bar Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_wmost_important_word' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' />
          </datasources>
          <datasource-dependencies datasource='federated.0lw0fu81fuc9mv1etwfic1i8oinb'>
            <column caption='Favorite Count' datatype='integer' name='[favorite_count]' role='measure' type='quantitative' />
            <column caption='Handle' datatype='string' name='[handle]' role='dimension' type='nominal' />
            <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
            <column-instance column='[handle]' derivation='None' name='[none:handle:nk]' pivot='key' type='nominal' />
            <column caption='Retweet Count' datatype='integer' name='[retweet_count]' role='measure' type='quantitative' />
            <column-instance column='[favorite_count]' derivation='Sum' name='[sum:favorite_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[retweet_count]' derivation='Sum' name='[sum:retweet_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[sum:favorite_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[sum:retweet_count:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Handle,Most Important Word)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[handle]' />
              <groupfilter function='level-members' level='[most_important_word]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Most Important Word)]'>
            <groupfilter function='level-members' level='[most_important_word]' user:ui-action-filter='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names]</column>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Most Important Word)]</column>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Handle,Most Important Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Multiple Values]</rows>
        <cols>([federated.0lw0fu81fuc9mv1etwfic1i8oinb].[:Measure Names] / [federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk])</cols>
      </table>
      <simple-id uuid='{06941261-3C42-4261-B4BD-0BCC1DCFD5FB}' />
    </worksheet>
    <worksheet name='Most Important Word Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_wmost_important_word' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' />
          </datasources>
          <datasource-dependencies datasource='federated.0lw0fu81fuc9mv1etwfic1i8oinb'>
            <column-instance column='[most_important_word]' derivation='Count' name='[cnt:most_important_word:qk]' pivot='key' type='quantitative' />
            <column caption='Handle' datatype='string' name='[handle]' role='dimension' type='nominal' />
            <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
            <column-instance column='[handle]' derivation='None' name='[none:handle:nk]' pivot='key' type='nominal' />
            <column-instance column='[most_important_word]' derivation='None' name='[none:most_important_word:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' />
              <size column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[cnt:most_important_word:qk]' />
              <text column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</cols>
      </table>
      <simple-id uuid='{444DE84C-915D-4D8E-BF9D-C9EEB26694EA}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_wmost_important_word' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' />
          </datasources>
          <datasource-dependencies datasource='federated.0lw0fu81fuc9mv1etwfic1i8oinb'>
            <column caption='Favorite Count' datatype='integer' name='[favorite_count]' role='measure' type='quantitative' />
            <column caption='Handle' datatype='string' name='[handle]' role='dimension' type='nominal' />
            <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
            <column-instance column='[handle]' derivation='None' name='[none:handle:nk]' pivot='key' type='nominal' />
            <column-instance column='[most_important_word]' derivation='None' name='[none:most_important_word:nk]' pivot='key' type='nominal' />
            <column-instance column='[favorite_count]' derivation='Sum' name='[sum:favorite_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' />
              <size column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[sum:favorite_count:qk]' />
              <lod column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</cols>
      </table>
      <simple-id uuid='{03381A6D-6109-4E1F-8A75-73BDEE32D21E}' />
    </worksheet>
    <worksheet name='Tweet Content'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweets_wmost_important_word' name='federated.0lw0fu81fuc9mv1etwfic1i8oinb' />
          </datasources>
          <datasource-dependencies datasource='federated.0lw0fu81fuc9mv1etwfic1i8oinb'>
            <column caption='Handle' datatype='string' name='[handle]' role='dimension' type='nominal' />
            <column caption='Most Important Word' datatype='string' name='[most_important_word]' role='dimension' type='nominal' />
            <column-instance column='[text]' derivation='None' name='[none:text:nk]' pivot='key' type='nominal' />
            <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Handle,Most Important Word)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_EE1F5ED92E9D448CB356A614DF8773CE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[handle]' />
              <groupfilter function='level-members' level='[most_important_word]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[Action (Handle,Most Important Word)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:text:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{A6499AA8-A578-4FCE-8D4C-AFDD152EA535}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98690' id='7' param='horz' type-v2='layout-flow' w='99304' x='348' y='655'>
            <zone h='98690' id='5' type-v2='layout-basic' w='92338' x='348' y='655'>
              <zone h='49345' id='3' name='Most Important Word Group' w='46169' x='348' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98690' id='9' name='Engagement Bar Chart' w='46169' x='46517' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49345' id='11' name='Tweet Content' w='46169' x='348' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98690' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='6966' x='92686' y='655'>
              <zone h='92793' id='8' name='Most Important Word Group' pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' type-v2='color' w='6966' x='92686' y='655'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5897' id='10' name='Engagement Bar Chart' pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]' type-v2='color' w='6966' x='92686' y='93448'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98690' id='12' param='vert' type-v2='layout-flow' w='99304' x='348' y='655'>
                <zone fixed-size='280' h='49345' id='3' is-fixed='true' name='Most Important Word Group' w='46169' x='348' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='92793' id='8' name='Most Important Word Group' pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' type-v2='color' w='6966' x='92686' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98690' id='9' is-fixed='true' name='Engagement Bar Chart' w='46169' x='46517' y='655'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5897' id='10' name='Engagement Bar Chart' pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]' type-v2='color' w='6966' x='92686' y='93448'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49345' id='11' is-fixed='true' name='Tweet Content' w='46169' x='348' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BFB583D3-9BD5-4810-970A-18D558B43C57}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Most Important Word Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CDF2D48C-3EEE-4967-89A5-940CBEA776B6}' />
    </window>
    <window class='worksheet' name='Engagement Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61A7FEAF-C43A-49DE-8C14-C3AE20EA2D15}' />
    </window>
    <window class='worksheet' name='Tweet Content'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:text:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3B13041-594C-48E5-82C5-A57F2BC0D25F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
            <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:text:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76293D22-217D-4BDC-AC38-4DEF865CBBAA}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Engagement Bar Chart'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:handle:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Most Important Word Group'>
          <highlight>
            <color-one-way>
              <field>[federated.0lw0fu81fuc9mv1etwfic1i8oinb].[none:most_important_word:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Tweet Content' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C97C64EF-7EA9-4B6C-A13A-D20E2D33E644}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Engagement Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Important Word Group' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deZAc133fv33PfR87e59YHIuDAIiDBCDeNElRog5HkssuyaWU7Sh2laOk
      XM4/SSpVqcofOe2kUqVYR0WObVGyaIkhRVKkSYqUeIC4jwWwCyz2vo+Z3Tl6+sofIIAFerb7
      vdnZ3dmd/vy33b83/Wanf93v/U7GMAwDDg41CrvRE3Bw2EgcBXCoaRwFcKhpHAVwqGkcBXCo
      aRwFcKhpHAVwqGkcBXCoaRwFcKhpHAVwuIucRt/wFHS9gOvXhzE/P4+J4ZvIFBT09/dZDs3N
      T+LkqVO4MTyBvv5+FBbnkVOWf3YGk+nC2s6/DPiNnoBDFaGrGLw5AOS9WCxIUNQsPAwg6QZy
      uSzGh65jZHwWHT0d6P3oKpItcQieKNTsLDKLi9i//wA4Bjh7/jyWplVocRfOfXwSjOBBc4jB
      R4MyjvY0Y2hkApI3CMnIQpZV+BLN6GhMbMhXdt4ADvfgD0WQTCbBM4Asy8vOGJifT0OXFzCT
      ziGcbEZHexuyc6Moaiw4GNCXSWtFGZpuINnYioaYH6FoAm1dO6Bk5tC15wAELQ+Dd2Pv7p1Q
      Ffn+aawbzhvA4S6chFQiBr/fg0hYh25I8AoCRJ5FOBxBcWkRsicIv9sLhuHAMDzcUCAkUki6
      Yjh36hQiyQZEwmG4eAO6wIP3esEZAnh/COqNy/B2tmHg4mkEYin4JAZgOAR83g37ysztaFBV
      VaGq6oZNxGHzYWgK+m8MoqOrc9MuJe4ogKIoUBTFTt7BYUvB3J8PcP7lj2Ho+krylrhDXnQ0
      xQFVK2MmDF6RZzA8P089dHc8gbhMb2Hw+HxoNLyATpES4ZHA5U8COt3bshgJQCsMU42Z044g
      k14klm/lhsFMnit5jvHGwNd9ESiWnjfrXQSztLKlZ0jLY3HuWslzRrQHH6cnVhx7LHEc2mKx
      5Dl/IIjFTHrFsSlpEa7Rd0vPOdwCfXESUEv/9nz9PvArvZp4CRA85j3AzY+vla0AwfoI2kQB
      kMt4k7AMPlq8iTMjdDcJADCdXehaIr9RbhOOxVGvRwGN/PsyIS+QOQVopX/QlVD5JNTMGaox
      s0oLJseniOXr+dNgr/2s5Dk23AaWeQzIl543E50EM3Nyxc+eLqYxNfh2yXN62yLeHL+64th2
      vQXKdK7kuXhdCtMT4yuO9fumwJ3/UclzXONBaFNXgWLp357RFfAr7XIFL+CObNqlm4NDRXAU
      wKGmcRTAoaZxFMChpnEUwKGmcTzBVYzkcsPj8xHLMzKzhrPZmlSVAjSHwyiU4YyrC4YQFATq
      cT5/AOksC4PivhE5Ft5EK7UfgHdvA6vVUY351XQWJ6dniOX/vU/HxgUVbE4qrgBGfB6GSh/c
      xDAsjmZEdEsi/Vhdw38duEE9bleqHvs+mIe2gnOoFLGOOuw+8AGg031Hz9wxMDN+qjGzxVGM
      pBeI5TVvef6bWqbiCiAXfgpDoffmghGgKL8DpUjnYAIAKArSBXpPcFbeuChEh+rApACesBcG
      TWjAMlx+z6on5OCwnpgU4IkO0MXGLCdkgD4gwaFSzEceRLo5UPIc4w6BY1hg2V4p7pNhKHMA
      AJaVwfg+3aMwDFxSG3TlbkxXWCtA5FoAAJyhQcvdfeMaUheeizbd+sOvofjpZ94m4lagRQG3
      JwyOufcN7/Hp8IpeyPBhNGuOIZsSPVB3/h5yS+ZzTKAe8ehueDBd8jsbdXuRKZY2dHKiG/ls
      rsQSaH4OKDMWCCwDxMsb6rB6fjYYw8cXrYwIp+75648f6oc69qJJimF57Oj8GyyN3xukxqIR
      AOBVM1g8ezdwjsEc9n5qUTdOpDEy+dI940av3/p71/4vI8QN3XuxJcAPoI89hv9+KVty1kca
      9uLUqdJ7oW890Yqj4d6S52Q2h7ODpVclkagL517+keMHcKhtqsoM6nAvz9V14gAfJZa/POPk
      c9BS8woQSISgKuRmUE/YB9ZVD+iU1iqN3kkVSutgJ8mXo1ccPxg1VaUA/kAQehn7DyYQRE+q
      nnpcWzSGnwwsolAkv3N2KAwKo4egaXRJP62tOrJeOlOtuyBRyTvQU3EF4Py7YKhL9AMZHuGX
      3oL70iXqofqTz+CB7cepxyV9It6aexMFCkdYMuxD3pOlVoCZuWnLxI9SbAvvopJ3oKfiCvCX
      PxhAeoHce3lnIoKAPw5FYeRKZw5ZoReLKGr0plulXGuXw5ahqpZADqtje0sCOkUoic89BPpH
      1dbCUYAthCscQkggjzdic/QBhFsNswI0NpbvCQ4EAJSuSuDgUI2YFODfvvEmNK28Aln1jY2r
      npDDXS6EetGnrVxt4X52s00AOGJ5b3gbuPZnTccZhoMY88PD3/0sxtChfVo4jdc5uJTmO+dY
      loVmMDAAIJ5EWHz6ns8TWAOGrkH0dQFM5N5rcRw0hoGPacHDbWYrGWMY6AhGIO5wmc5xHIdU
      TADvPVTy++lCCxLJ0ktCX9CP5j1HzAqg61pZpshbY51NZSW5PnsNJ4c/JJbvrvsqADex/JT7
      YQyHDpY8d7EAwHU3rigwewUnX/tpSdmOri68MVV3y5rWBwAH7jn/je4s5i+/j/PvvGEa2/jA
      UZyKNwEogC2hu42D4zj32uslr/vMZ57EjrkWYO6o+aRLwNhcEXw6X3Lsws4wRrtfcPYAf/RY
      I5VJMxIO4fSCDoXSDNoQicLLUkaeZOlzHBzoqCoFyB3vwdK2IPU4d3M9GmX6glphlx8LmUkY
      FEs+Q9Tw6vV+FCjrqEaiEdzI0OVJuLgy92IOxFTeEcZx4DjydeidiXAcPmmYw2Bw5RJ7K7FN
      82D670uXz7Oi2LEDUn039TiHrUPFFeBPv/T7AEVszR0YBv8A+pvY4S5hjw5RIP/fCyx9+ulW
      o/I5wQvZsmuDOhndq2Ok+B6G8teJ5Xd7vw6AvOrEVqSq9gAO95IKNKA7sYNYnmfpfk6BlYn3
      GRyzNXtHOApQxbBXAJYmNrCF7vNPD/fjrV4y48GzoYi90CbEUYAqRi7KyFMEB97X6sGBAJMC
      fPGZJ6CX+Y/0+APAJvOFNdU3QafoD+AJ+HGiU4VC6S3nGCdbpRoxKYC7mAHKVABJ4QBuc2XF
      t2YlugYZggDVUKEadI6wg143dmqlKzasxNlhepPwWhEKhxHs6Sl5ThQlPOUuwjAMROoa0Tt7
      r8NvTNJR90g3+KCC++8sxuvHsekxZNNzuJ/wA08im+xBbM+JO8dYhsGuhV9Cnx+EXzoLrXh3
      jSh7HkF+vHBbEJJmQICOYKcfLn7sns82hDnEfZHqWgLtRwe6DLrqaQDgc4cxdrCdelwokaIe
      UzbpWbCTI1RDGKN6XqcL8/MYu3iRSPbjfrMf6MC2FCRJNq0ufJqBlt6zmBkZMI0Ru5/AcEEE
      cNdcywGIpM9AG/4NAGC5vTEbbcLcOXOAdzBcB5d01nScC7ZWlwK0X8sAY7PU4zJNBVyb/zH1
      ONF9CAjupx5XrXQuNaFhibw42RnGHGBWa6yoAIMjQ/BF4tByCuTFaQzLHFoiXjQkrJc4o3kZ
      WoHeD8BwDOif4Q7LES+mwV4iXza1P78XxxvIInijuoExe7FNx4oKkM1lIQQDmBxdxOWrZ1HX
      2Y2fnTqJR058BjubVm5rf/VkHwoZ+rRGlufQfjRMPW4rc/TgPuxqJU/2d49zVJX55OvXsXjx
      lL0gAHWF9f9mx2YJpCGbU9DZ3oV9+3sgQLW8+R0qCy9nIebJkxYZw3mA0LKiAgT8Abh5EbGo
      FxzHgQUQEBj0jkxjR+PmsvQ4rB5PIoHU0RJx9/fhjzQA/aPrMKPKsKICNKYaAADhbXetMvt2
      7137Ga03Ag+wFNYWgYNHEKFwdGbQze4FGJFlvD5vb6A46t5cb6GqsgJtBMXoy1RV3lhPK741
      FABUOgUYiLchG6Fznnkd59maU/MKoOUG6Lq9sBIwLQOUCTEvigLevWm2dVvxP/fTbTxdOzuA
      OPmmmV3osxfa4pgUoMk4D4PSy3kbzmjANdCXKLzN+yyHScqIRgBoCCShPvpt6nG6pw6YeZl6
      XLVSyCpYnC2dA1uKxromPLT3GJHsfDACzJauw78ctxt46EHz8WgwDc6n3gkyCLgC0Kc1cEUV
      UrINUV8MwK2EqqCbh5zLwpMeROOymqqBqAilMI2FaDN06a4Po+huxWjegCIlILtCd47HJBeU
      2VkMMiLG1Y47x/2BAOqUG/Cpaomk+L5XqRvA3Rmb2AHgK2WNBYBrN66j/yp5FYTbyAED4+6b
      1OPyrIFqLj7IcDxYnqZ2D92SSZ9RoPWRKYwRJHsoynoalxb/znziPvtsT2oP5DfzppZYHq8X
      ++q9mBrsBy6fuXfMiSjSo2+YCu9Mt/wz/N2IDuDee+exZApzF94HLtwrv6tnFz6X+T5YrMES
      qOtYI9Qyem+xLIvpKxfsBWuID4yb6DMuE8t/BV1rNpfmQBAvBO1zE2JBFhS+uA2n4gqgy5PQ
      C/SOMKNUTYwaZzQ9giuT5AkBauvaJa10MS48zNqHWYwxefxkzWZReZwOMQ41Tc1bgbYSrqAI
      0SBPdJ+fL6OM/Raj5hXgmvR5aDq51SsgRuHvKsKgLIxVTtl3WtxD34O//5fE8um6f1PxOXAs
      j4jHvq2TXwpABrnFaq2oeQV4dwIoUtzLLWGgbnaGukHGkb11aKinCyGZnV3bJzTfI0LsJtt7
      sR4emLD3mLtdbhzZW8IOeh91nga8h0mia68lVaUAqfoGaJQeVgBIxlPgyiipknDXgb6eXHlk
      9GFM6eQWHQBgjbVtPD7FTOAyTxbk3CE1IR6K2cppUhGTi/afKXHVkYtgVgCGA5gyM5GY1e2p
      n/G6gSB9Rtg068MPh5uox7HhCAD6BJz1oiPWAVBkhYmFtL1QmbDKAPiM/fKKda2dKXYtMCnA
      W5/7lzDKTMULSRE0XVlFq05FBRT68bqqQi6jpDttYvt684hnCo+EyAvk8pNBlOfDJ8DQAI3A
      v0PhRN2/78Cdkuu3ESUJTSEJofCtsHuF0ZDXbuX5SgkfAsLdbyjxEnRoEKPNOM7fTbVkAAi6
      hm0+L7J77y19ybI8mpu6wOc/D6CEAgwsXoNepgIk1BTivv1QBHpHGMOywGKmrOs6bE6ebehZ
      uRlLqg0A8BvXDfz1te/fOnZfQ/jPH34BI/INAB9BXLa9ElkJhwauY27gE9xfajmSOoj9/MOA
      56sA1mAP8F/ensDsCjXZrRB5Dj9+yKmNuBoKkd3INpGbQTXBD9A/q7YUVbUJdlgdvTczuHqK
      PA4h3rm94q5Qj+zB0f4TtnLBRKQqkiRqXgF2RmJQKUyaMX8AQZ2BTuE7AIABZpB2amtOx0IA
      jYsNRLKxJi/A2TfuVovA9FkCy1KHAXSuY1maFah5BXjm7HlApdh4p+qheFsBynZQjNAEH2Xj
      dxaza1poz31uAL4PPiGSLT73ZQws2sfOso0JAJtnL1fzCrBe7Lyaw65Buhsjd6J6Kk0qizlk
      r9vPX3JXh32flOpSgJi9o6UUYjiMVo08rfE2SR9dqcL1pqDsRK5A3jJKNzZXbM//mcnZ9lpz
      J9fWVF1VCjCCPLKg/xGjhQy+1ttPf8FU+dlr68GN0zpGL5PvNYI7OHAUCTTMBuccv35uELJi
      /f0eOrIKvxIBJgXY49pVtiPML4Xx9ioCnHRdh0G5uQQAQ9cBytgcAOWNqWL2NwOHKKInCjMo
      43FjjeRxofvh3bZynqgfGDxjKydxIsLu0r0J3LwbXs0cOSByEgRXCJLHHHslusKAyN8piGxS
      gMd/naHe4N0hKuCVWBheF33vKYF3UhNWiz57A9rgb8gHiJQdNQgwdANa2n45qrvInuztrnYc
      9f1u6ZMjQBJxtLtn4On/e/N59u6SWo58FfNXVGAGGMJ5AIDY0Vj5JdCf+74HnbFPnr4fhpMw
      iz+t9HQcLGA6esCIZC2YfAci8D9sX0XCkDgs2T/YiVGKRWSWrNvLKsoUdJvMORVTyA/f+8Y3
      gv41SInMjMFYog9zNQhszGsC7TKYYarCgVMJ8tOLSF8hs0y5t2UhBj6yFzQ8ADpXN7F1pKo2
      wRvByyc8UHXyjVbcLaGlX4RBU00OQCMrgJFolXyLaNoK/N6xRqg2zUmaom7Mr2FZ6ppXgIHF
      a1AoKsOphoLIeACGSqcAU9vbkEvQmXnFQhbeKHl4OMNuLoXxyJPQbQwRvL623uKaV4D1orhY
      QH6GzubS06qBLZLbwYuRBii5PcTyDFyouNeWM8CE7R8ojF8FCLJEI2waTaL1+t6X2gc++CeW
      MsXpZgDmynxVpQDzPhZzGr01SApIiDeXYdEIV3nrz2wWSJOXR5/TtmH+iptY3tvmAzBVxsRW
      Jp+dx4dvv2UrV9+5E0LKPnmGzdyEeOVFSxnO7wWn2CQDacmSh6tKAV4dfRsXxs29nOz4QuMT
      aBsqYxOtKAB9IlnVossKtCVyP4xBYe6e1lMYUh6zlQtzIQCniT93o6kqBXBYX3LdKcy0koVa
      jAvAD89YmyMB4Kl6CdUYYCLFXAjvvbdahZASzAqQTrZSPRmWwwUDYCr7RnVYQ4aMAk4bZHuA
      AMiXVqT4g0HbHs0Ca690JIiFkwjM/ujeg7Ml3gDv/ma8bAUI1svY6/4idI6mU9Wn8Dwq75h3
      qGZCvx6HoVhv8sVDPnBNRyxlmFAzoGatL7ZYuvhBxZdAuU96oc2Zmx7bwQgC0NVW6enYsiez
      HypFcnyEiWEwDqgaXTPx3ZvLQlk2guRC6y77TkLhVDOUGzMwbKxci8WDGDf+0FImcmEcymuv
      WsoEn2oo6VWp+T3A0i8XoFGYGt0dLvxvYwAFygYZ333oOYi6j2qMHvZAY8iLBofjzfDW1xHL
      T/lZQCa3MpHg1ubx4Oxf2cpx3iMYwCFbOUM3YKjWDxtDVWHYVSRfYalV8wqwXoQnr8E1RJcW
      Odx5HJkp8kIBHTEOHo78J2UZ8rdYs9uPz6fs39A7/XRvxo3GUQAHIhITS2h796atXGQfeQLP
      ejLVvAfDB1tNx6tKAZ5u7cGDEbplAgC0utqQm6CvisaJLgBrV02t2mGyEthpslALRtrcm5hp
      Ywmn1RHT8apSgG5mCBp7hXocsyhi5ucfUo+Tdu0E0E49bqswNJHGb86bb4pS7N0WQ6Urlf78
      sRbblMjHklNwT71pKaOn/gnQ8u+sL1Y/CuSGTIerSgEcaouPh25CtjEmbGcU+AfftpTxCceg
      TlrfylqkdMSvowAOFSXHhXAu+k9t5WKBZmCBPnGq0pgU4KnjdWWnRDKBAM74HoW8RN8MguU5
      RLD+3dUSnfXQbJwxywmmIngAKoqU+cTsOiSgf8T0oZ8l77KZA3kfYiERgf8he/t+IcjhvVfe
      sJXryAq3cnPXiagax+78ftNx0wxcY4Pl5wTLUXxngsdsmqa15y1EnsMPyrvqqtix+yUYFI2y
      Od92/PnEUyvalVeCN6Y/9XaTMyVxGPWS/y9H5q7i/SH7SMzb7HaROx4VncFS0X7+uladm2X1
      ZhH5k+awj5pfAhmGChgUTi1Du1XR2KCzd78jy7hB+Wac7hvHB5fJ06GOP0LnnPO6BMSCZFtb
      UdiYLp660A41sEJS/Ke4vS74w9YRqNNq6dDrmleA9WJyfALX+65RjfHvJ1+ilMNzgbP4ZgNZ
      acS86xuYRHmFy1biC9E4VJuOQFJGwwcfjVrKtCCP8PiPLWWY+m+j1O3uKEANY2SnoE/32gsC
      MJJLQIUV4NGXXrYNYRg+/nBFr3k/VaUANzy/j3nQlzhMRThIf2CfrHE/TNgL4D9Rj3NYGa/L
      g6d7jtrKhRqSwIdkb59K4In4kNxpVuCqUoCJJWCsjBRVwa0jMGkTDlsCHRxc9h09Nw0n0I7D
      BnmFiwjIw9ZFH4OA334fIHIGopfto4G9yto2ALyf8cgofp28aDpeVQrgsDrCl0YgfUSeUiq+
      0ADSrbwiZ5DN2RfGgpc8GpWEunAKj+9rtr5ki4bxoHWzQ9kbBYrm5BpHAaqYA60GEhK5udU9
      VT3l1CuFmpGxNGydKDUXnMfM1DuWMkKqvWQ3HLMCNDWX7wcIBPBYLI8lmd4PwLMbY2bzZT5H
      VSSXYaJAtI+qGyIAMIP0/9Nw9mfQFsjt+qz+O1QKwEbaAPcjZLLeGJCrbGd31759tl1Bi+Ew
      MLx2ebYmBXh94F9Dp6iUtpxAbAeyOw4iq9Av5HmGBwgSJCoNOzBO2SHGALwXAcp+BEcOHEF3
      C11HOl0hWHKsgr9dSuCn02SLoD+J+tG6isrfpfjFXC/UovX/sStlvfwhhWM5SKy5eYdJAQzo
      APHK0DzaoTRx9wDCQbqqsddn6JuG02AYBvkvRuj4EwIs6r9sv8EVghLwNwZs7xlKh+NKBJke
      dPLmUA5nD+BABOv2QnTZ117i/Rx4vG//eYRVqd0RFqm91ktqf0s75PgXLGWKUgyTGfObvqoU
      IFacAlugT1DxuMMYS9JXlIuEWbSShcNvCgKP/xaEw58llucLs8AM2fp6MVvA9QV782Yz50eq
      guFAcvEiMgsvWcos4hs4a5OKuYsrfb6qFGDyw5cx1mddB7IU8/sewvcy9A60vfUNOEA9qnph
      igbYPMWSoULLi81MVSmAQ23hCYZtN8GcQN9tiAZHAaqYbYnn0U7xjhJ5P0BhqdkbjoBrJUsJ
      bfB6sEiwBKLh4m4Gimq9XooEAIyv/lpRSUY85DjCTExu3weDwg8gBgNgFFA383Mx1hGNpfDM
      FsEMk9/QWtyg8gPsy6TxwCjZJmjU48FlAjmG9UP02O9DWFccg3N/AVm1Ng0fdEmoROfhYPEs
      6hbNHW4qrgBt3k7kNfqMMI7hAAxXejq2vMnXQ2XJ18IpTgR/4xI0yoywhx9sAUeTdwAA89WT
      XOJyuxFL2jer8Lqi4MbsK3vcCkS0R4seRiH6nKWMX2eRvGC9d5T2lbZgmRRgpvkPoZfZJlUP
      xNHxgzTUNH1gGsNzGLYvF79p6b34j5i6aZ8quJyn2v8jaPzjqouF4id/pnF5hrgJ05mhLP7y
      E/veb196kMfXwpUrpJuWFUxlrR2rhVwRl89csJR5oH07Sumc6b/14qAOtcxQiI6Yjn9e1kiH
      SnDq1C9x5TxBI7tP+cKJzyO8hvPZDDjNeR1qmqraBEf374TRSt9eIZRsx2dz9PFHDYEYKBqq
      OFSYhwLHodjEYcWEGKYqEIPUK7fil3KD6XhVKcBgaBqDPL1rtsPvQ96grygni21Afhv1uHWD
      4wCBIrKWoduYZ6JR5AMhIlk5T5HAwhEsLFgWI+8NQrHxA+x8cicetalJF4sJ2H7YOl2zF0W8
      0V/lpREd7uWl4CR6i/3E8ofm6VqKTuVzWMiQNSVRPG4kCCw3HMfio6v2D7FQPVkqHj+ehu/y
      dUuZ8KE8kuM/spQZDCRKfz7RLLYwEQ8PVSc3g/pdHPhgiNoMyij0Js2RhWH0TprT+FZiP1fZ
      pPXlSMExRLe/YysnBh7E7Ef2RhSWrY7tZ80rwN7v/AcYBfI4fam7G64nJ2BQNNcGgOsTlD6A
      Mjiwvxv+beRJzqOsl/gNsCQvYWjevr9Bh9CFRFW2yStNxRWA5TkwPH12F7NBhZe0uXkYhQK5
      /GIGurIAUFSTA4BA7DA0ympy1xi6p6QoT8G7ZL1cWA7rM28KtyqtkSieD8ZNxyuuAP2/60JO
      pfcjcAxHV6Ftk5GZvowpmyrH92N0fmWNZlMd+AMB202wuy6MgMvmjdJcxJLnSUuRnBTAwpw5
      QsGkAP+5rQNGmWGykj+A17K/xlKZKZEN3jK6vTtsWr7V1Q9DtX77ypFdmLJp5XROl/G38wOW
      Mk8l8wDMkaUmBegaGS4/KT4aBaqzQ45DCQK+MBoSZD+YzN0kkvMGDRz7iv3+SPCp0F65DKjW
      Nn6j/nEAa5caWlWb4N1pGc0lXlN2+EQWCGynHhd3JanHrCc9TbvhD5HZ6QFA4u1TFpdjzOsw
      BsmWnS37mvGlh79kK9flikCYss7gAgBO31EVJVyqSgEyY6cwO/oB9ThFdON6kN7MWNRkVKbm
      wNqQ49JY4O0D0G6j80lAoHBYUfQsWFIyuElQpSLGdqCVfAbrBs+ycJdwKlaVAjisjveHBAxd
      IY+eP9FTHbZ4K1hegOCxXgJ5XRLq/PWWMg+6i+hmzQ+TmlcA9mt/BIPCasXGAuAD7wEUNTgB
      wOWOwe+h2yDNUTTJBoC52RkMDlhvBpejdD9EFW69EeQNFpOadVrktgngX71v/eaLBnMA4zTJ
      M5HJMNBt0vKW43UzkDLnqf0A/eFHcdVPt+rtqJ58mDWBe/rrgE0RNk1vQLbPulKIkpXBjVo3
      EtHl7SiVWlbzCuBQWQwEIePLtnIiomDy3wdsPOoGv7am8YorwHbP8yjQlBr8lFtN5P6i0tNx
      sGDCq2GGI7MCdUtxHC4cs5WLF+swdcU+fNmb9CFSBaXpzQoQiZbvBwiGMLUQQU4pxxMMkBv8
      HCrB2dkJvDNB1oPsm8JOBBbs+wkoiTBxmuW6wiQBzly63aQA15hWwMbzthISKpcL6gDoSx3Q
      ZsmdQD2dKbR6yUOiz1N0oNwodImBYhPkqkTjKB570PpzGB4gyQdQssWyK4Zx0upWVH73H0D3
      fpF6XEpqxP4SlX/tYFk3boC+XMl6cXl8Br+5YbZcrMTXD3UjEiB3hvUZ1k0lqoEbi9fx19et
      a40+7zuO/LB12PjTTQ0olc1QVZvgucE5TPeTO35u4/cGkQrRL7sYCuvPaolxjcjRZHcB6KvO
      xUTF0MWD9gGQBL2JV0NVKcBGwLQJYGgaZAQ55OXdMEC30X//fQbvXaBT0gPHqcSrAo4D/AH7
      7yl5Dbz/Ixc0xVoBCofXtn5pzSvAG67/B4UiuaVZbEf+/56FWqTzA2g9u2mnVlUIPIeAx355
      JeXS0H/4PVs5vacHWM+gCY8H4M171JpXgFrmc6qBR/JkZtD0yABOnX7HVm5H1zEtiYgAAArU
      SURBVD5UMs0m6onhgN+6c1CjqwPyTuvl5YfiJF6bNedjOApQwzBDw2A/JCyk9Zn1b18FAJBU
      IGidM+DhRMTj5myv5SxyeWSL5vTPiitAZzCHokqf2cUyDOWqeusT9niQCpDHD82Eg5jykG+c
      40PO86/yCrD0P2Ao5jLUtjACLoLeBLqV6W7NwV9H/r+c1HQML5JHeH5Gd0oDmhTAlwqW7QcQ
      fasrZB1qiIGhiFG/jS8ZBOOlvzbjcwP0+TfrxpKSxqw8TSzfyGnY6FuadUlw7TU3o7sfsbUF
      x32XYWjW7/3ByC6ArgINFSYFaGF+DBhlXpFJwd5ZvjJXui5hKEVe1eA2+9x7kO+jb5HkiSZg
      U3SsYjzfEMRxSg/7TIn49Y3CE4qifudBe7loM6bP2zvvvDEfojO/sE2JZBtiENzWG1yO5cBw
      1oHdnfWd+O363zYdNy+BdBUoszw6KJtGmIYbGrQylE83dBhlzNkwDPiFABSKvsge3guWoLXP
      /SyOzWG6l9LrfKR6QhWupCX81ZB99NrzjAdHCMq/GIQlYuJLWRyZsu4bsZBqxCuMdR7EDkXF
      gHzVdLzmd0GXrjRCtulWvhw5Ecfhw09Dp60MN159qSfFB/ZBqyMLQdT0MDBkXxir0si5GcyO
      WluqMlISlyasQyGaUqWNszWvAAOzM8hTKIDP5cISDOrSiAEjQjs1agIuHpqf/K2Ry6uYlskq
      L+e5zVPtjYaaV4CtxMAHr6P3FHmb2aeefnoNZ7M5cBSgimmUWiCC/Ime0XIoyuQhGuXsmyqJ
      5n8BsEmeMoTKhNgHxTACkjm0vOIKUPCfgK7S2xYZhgNA31tsKxO9HoGLYu9wRSEvpU6L1yWi
      MW6/DArXBRBstK/R5ApHsPjfXoJho7CuFz6LTv+/sJQR2QQ6i9YOw2zBwEnZ3EOi4grwzsKR
      sjPCXOHXKj2dqsF7uAfBnXTNOJil6nFSaB4ZxZR9n2DF60U2bW++NYogCvbWZzXIN6z3Kb62
      KcTfP2MpU+wIAyWMWOaEmLrWss2gjCsK0JcFvcMBoxPdOv1mK8w1Agn6NjpSIARg7Z6ay5nW
      WAypdM+b1rWNBKYiVyxiNG1dnQEAMjYxOdWG6RfJFz4o2xHGMs0AHip7Mm19aWBshnpcod2P
      mzlyj+ltdG3rVqMmYUT24XqGzIMe9G7N5Jya3wR/s3kJqkbu1IpHckiM1UFX6R4So+uQ3ZVq
      b0CPaw+x/PRSER/1jhPJHvStXfeZjaTmFYAffhGMQr7W5pTDkD98EHqR8u2xax/lzOjJJOcw
      HiB3VnE3N7YyqtjWCqNobQXiElG4Feu3lJBwgWlvt5TZ4e1BO28O6a55BXAgI+r1Yn9jk61c
      IhLCZMF+rxD2c8gcO2zrUd9RL6Gj3tq3kQ7ux0LUOk7J5w7CO2V+aDkKUMUMKiMYLZDX+vQb
      9l0cy2U/P4tvSWdt5UbQjD/r+wdbuZ7UHhyW99sqgK4AKFqHWBqKDNXGo22sEKfmKMA6EfFq
      UHm6lJ+RS4O4dP4csfzBw9a1cVaFYdwKlLSVq4aq/+RUXAGCbh4ST/9PYLemkeEOg/I/4lqu
      l2pM0qjm7gVbg4orwFOLP7F9ZZWE5QF0Vno6DhY87SvgtxJkGWcNkojNnLNaYBjkSuQKmRRg
      yP1M2U3y3K4gOudOA3IZ3jCWR66xHloZWWVsPIyYskA9TvDxwGXqYVVLFLuhg9zb7B2+DHz4
      HpEs1/5oxVt13cr+s371j0iN+Dhi7Vyri3GYClrfc5nBaYy/SdAf4JVRF/QyFSDpl1b1DJ/J
      zSOXoc+CCvsLcOv0YRScsh2xhsegqeQBZIFoF3w9SRg2BZ3uh2HX/vE5tZhF/5K9BeY2e1UN
      xIUUOZ6o/ZJHCuF4yr6KdGOkBd1MFLpNEtU4Y+DijHUJR8UFDMjWTzKPWlp7a34TfPG9eahF
      8kbZqc4MjsnfBRTK0AvjzyhnVl2cLPjxc8U+TOVYMYbjr03Yynm7JCy1jcGwsQKpKbrGf7TU
      vAJUM9F4HM2trcTyHL92WWcL+Tx6s/ZL222sG11rNovK4yjAOpFwp6CwdBUb9jQl0CmRh1xc
      W0MF2Ko4CrBOuIdE+KboSlDo9Qo0ihqktMYLRhDAuMkSTuyqLqwVdTqPR2Xr/1tEj6JJt5bJ
      Nyq4/ri5KIGjAOuEAZRdb4kUjygi6CLPoAo+/CjCe+w3rABwuTgHnCEso1hB+PEF+N6+Zinj
      +sxBKFlr6+FwagyfjJjn7yjAFmJH3ovmDLlH0efXYCwQZuEJZEsxRuDgarTPCZDiQQSS3hVD
      FG6jzVm3SF0tFVeA3vlDUHJ0pcMBgOFYBBsrPZvaQskXIS+QW6f0OnLD/rFYPfYdetJWTuWK
      eO/M67ZydfI2PJKetm2TOq+sbRStSQG+ncisIiOMxVtvL6KQoU/lY3kOPl8UE5P0mV0JXwon
      5Reox7VoUXDCIAydPPGc43iAk1ZdBGyzIRU1iGn7B1taKiKXtvcuF7KrqSFYOUwKIMxcLj+g
      yZcCUH5K3MCNG+i/aq7eZUerwONXZfxD99areLy1CxpFXaBwqgnfcT0LhSKJBgCeouz67nAL
      KepF6EHrjgOuxgCQs75ndwbj+JpiTtav+T3AWF8vlSNM1zVc9J6HrJKPAYAntj1GOzUYoRh0
      lkJxCltPyfjAMALdH1rKFAUNuQnrt5OuTYAfeNX8+auanQMxSX8DInb9Pu/jVLaAK/PkcVVf
      kug6TzMuAUzJ3oklELbmrbI1v1UVUpzNozBKWfdoB11xXH9dHryXPBbo5k0NNz8ha8P6wPFd
      qHhWMEkp/DUOk3cUYAvB4zQkfEAsrysvQCmQ7WVGFQ0XCPb9Ia8Pxq7P2soZqQSGbuZgKNYf
      GgzKa5or4iiAAxFXJtL4MUEFiUM7GvDxFXujwl5FRXP/IAyb4gLejgBE8i5RKyKIfniCLabj
      jgI4VDWzbDtGBGsHkSSEcUmyjkBtDfZgsNmcK1FxBajbraKYp499Zzkd0/ZRtA41xkxexcc2
      viG/CLzab13h7wseL2Zz5j2YSQFmzoZg6OX5AfiEH3PMd1HI0ie1sJyEbxz6XzA6OugvnGrC
      1w36KsKM140XlwCGwg/AphJ4Nn4IKqUjjMvRd3vhORbiBgWh1QomBcidPAVQNn+4jdDWCvSU
      Pxl2agoYo2wjBMCQvGB1+oUioxl4+aqKQpH8++5RdGyP7oKq0wW2ZeoKmKMIVAOAZxUFz1O8
      TfOGQZW2K7hFuENkZtCcsDUV0dkDrBN9uTlcS9Ot8R4GD258jFj+Qngvrk3XE8uLdfM4s93a
      yXSbvfEncISzD+fennIjCvs5NKZC6Ng5D8OmPuu1kARMrl3ZfEcBthCnB/L4xQVyx9mxE7MY
      nCcrvBXzncOF/Mf2cktPIHXFPnUyoqTg6rhkGwxXJyTxUMS6vVRA8qC5zbo04q6iCu6auWyk
      owAOVY0rt4SkzVuw0Z/AAyMjljKLDI/5d39lOl7rjcIdahxHARxqGkcBHGoa0x7AfWA/QNjF
      2/RhyQRijQKKBbJye8thORGIJAG+jG1JNALGJim6FIzPhYPb61G0iUdZTmtdCI1BERpleq+b
      D1J3ZWQYjiqPuFWM4ZBK/kzrTATASuaa+aXoiJFVnGsJtiG4w/63CNSFgVi3bcFd3puET7PO
      XOM8IUC2/g15hoP7wAHT8f8Pq3auphm1pV4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      LAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tweet Content' width='192'>
      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
      FHuFArsuy/9/7xslwRwdT/sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
